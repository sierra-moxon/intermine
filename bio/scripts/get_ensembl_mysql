#!/usr/bin/perl

use strict;
use warnings;
use File::Path qw(make_path);
use IO::All;
use Net::FTP;

BEGIN {
  # find the lib directory by looking at the path to this script
  push (@INC, ($0 =~ m:(.*)/.*:)[0] . '/../../intermine/perl/lib/');
}
use InterMine::DataDownloader;


#Define ARGVs
my ($data_dir,$organisms,$database_name);
if(@ARGV!=3){
    die "Wrong number of arguments: DATA_DIRECTORY ORGANISM_NAME WHICH_DATABASE \nPlease supply the organism name, the download desination directory, and which data you want to download (core or variation)\n eg /data/ensembl mus_musculus core\nThe organism name must match the ensembl filenames, as this is the search string the script uses.\nThe data will be saved to the directory for this organism, eg /data/ensembl/mus_musculus core ";
}else{

    $data_dir = $ARGV[0];
    $organisms = $ARGV[1];
    $database_name = $ARGV[2];
}

# ensembl ftp site
my $server = "ftp.ensembl.org";
my $releases_dir = "pub";
my $current_dir = "current_mysql";


# -------- access ftp server ------------- #
my $ftp = Net::FTP->new($server, Passive => 1)
  or die "Cannot connect to $server: $@";

$ftp->login("anonymous",'-anonymous@')
  or die "Cannot login ", $ftp->message;

$ftp->cwd($releases_dir)
  or die "Cannot change working directory ", $ftp->message;

$ftp->cwd($current_dir)
  or die "Cannot change working directory ", $ftp->message;

my($filetype) = "binary"; 
$ftp->$filetype;
# get list of all directories
my @dir_list = $ftp->ls();

my @organism_names = split(/,/, $organisms);

for my $organism_name (@organism_names) {
        
    # TODO download variation db too
    my $species_prefix = $organism_name . "_" . $database_name . "_";

    my $species_dir = "";

    for my $dir (@dir_list) {
        if ($dir =~ m/$species_prefix/) {
            $species_dir = $dir;
        }
    }
    
    if ($species_dir eq '') {
        print "no data found for $organism_name\n";
        next;
    }
    
    my $version = substr($species_dir, length($species_prefix), length($species_dir));
    
    my $organism_dir = "$data_dir/$organism_name";
    if (!(-d $organism_dir)) {
        print "creating $organism_dir\n";
        make_path "$organism_dir" or die "failed to create $organism_dir $!";
    }
    
    my $download_dir = "$data_dir/$organism_name/$species_prefix$version";
    
    $ftp->cwd($species_dir)
        or die "Cannot change working directory ", $ftp->message;
    
    if (!(-d $download_dir)) {
        
        # make download directory locally
        print "creating $download_dir\n";
        make_path "$download_dir" or die "failed to create $download_dir";
   
        # get list of all files
        my @file_list = $ftp->ls();
   
        # download all files
        for my $file (@file_list) {
            print("downloading ... $file\n");
            $ftp->get($file, "$download_dir/$file")
                or die "failed to get file: $file";
        }
        
        # unzip files
        print"gzip -dr $download_dir\n";
        
        if ((system "gzip -dr $download_dir") != 0) {
            die qq|system "gzip -dr $download_dir" failed: $?\n|;
        }
        
    } else {
 	print "$organism_name \nCurrent version $version ok\n\n";
   }

    # move back up to main directory, just in case we are still looping
    $ftp->cwd("../")
        or die "Cannot change working directory ", $ftp->message;
}




