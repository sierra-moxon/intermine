<!--
  this comment is here to prevent ant from setting model.web to null
  It's basically pointless in a file like this with actual content
  but it's mainly to show good practice.
  -->

<servlet>
  <servlet-name>ws-gff3-query</servlet-name>
  <servlet-class>org.intermine.bio.webservice.GFF3QueryServlet</servlet-class>
  <init-param>
     <param-name>debug</param-name>
     <param-value>true</param-value>
  </init-param>
</servlet>

<servlet-mapping>
  <servlet-name>ws-gff3-query</servlet-name>
  <url-pattern>/service/query/results/gff3</url-pattern>
  <metadata>
    <name>GFF3 Query Results</name>
    <minVersion>10</minVersion>
    <method type="POST" authenticationRequired="false" ALSO="GET">
        <summary>Query the Database for Sequence Annotations.</summary>
        <description format="markdown">
This service provides full access to arbitrary database queries.
Queries are accepted in a serialised XML format, executed and returned
in a streaming manner. The query format is a custom subset of the capabilities
of SQL; see the InterMine wiki for a full description of the query XML
syntax.

This endpoint specialises in dealing with queries for sequence
annotations, and returning results in [GFF3](http://en.wikipedia.org/wiki/General_feature_format)
format. The user is responsible for
ensuring that the query contains only suitable types for export.
A suitable query is one where every view column references a
field of a `SequenceFeature` (including all sub-classes). The
particular field selected is not important, and the object itself
will be selected.
        </description>
        <param required="true"
            type="XML"
            default="&lt;query name=&quot;short genes on the X chromosome&quot; model=&quot;genomic&quot; view=&quot;Gene.id Gene.exons.id&quot;&gt;&#10;    &lt;constraint path=&quot;Gene.chromosome.primaryIdentifier&quot; op=&quot;=&quot; value=&quot;X&quot;/&gt;&#10;    &lt;constraint path=&quot;Gene.length&quot; op=&quot;&amp;lt;&quot; value=&quot;1000&quot;/&gt;&#10;&lt;/query&gt;"
            schema="/schema/query.xsd"
            description="A definition of the query to execute in Path-Query XML format">query</param>
        <param type="String[]" required="false"
            description="Extra columns to include as extra information in the ninth column"
            default="Gene.length">view</param>
    </method>
  </metadata>
</servlet-mapping>

<servlet>
  <servlet-name>ws-gff3-lists</servlet-name>
  <servlet-class>org.intermine.bio.webservice.GFF3ListServlet</servlet-class>
  <init-param>
     <param-name>debug</param-name>
     <param-value>true</param-value>
  </init-param>
</servlet>

<servlet-mapping>
  <servlet-name>ws-gff3-lists</servlet-name>
  <url-pattern>/service/list/results/gff3</url-pattern>
</servlet-mapping>

<servlet>
  <servlet-name>ws-fasta-query</servlet-name>
  <servlet-class>org.intermine.bio.webservice.FastaQueryServlet</servlet-class>
  <init-param>
     <param-name>debug</param-name>
     <param-value>true</param-value>
  </init-param>
</servlet>

<servlet-mapping>
  <servlet-name>ws-fasta-query</servlet-name>
  <url-pattern>/service/query/results/fasta</url-pattern>
  <metadata>
    <name>FASTA Query Results</name>
    <minVersion>10</minVersion>
    <method type="POST" authenticationRequired="false" ALSO="GET">
        <summary>Query the Database for Sequence.</summary>
        <description format="markdown">
This service provides full access to arbitrary database queries.
Queries are accepted in a serialised XML format, executed and returned
in a streaming manner. The query format is a custom subset of the capabilities
of SQL; see the InterMine wiki for a full description of the query XML
syntax.

This endpoint specialises in dealing with queries for sequence,
and returning results in [FASTA](http://en.wikipedia.org/wiki/FASTA_format)
format. The user is responsible for
ensuring that the query contains only suitable types for export.

A suitable query is one with a single view column which references a
field of a `SequenceFeature` (including all sub-classes) or of a
a `Protein`. The particular field selected is not important, and the object itself
will be selected.
        </description>
        <param required="true"
            type="XML"
            default="&lt;query name=&quot;short genes on the X chromosome&quot; model=&quot;genomic&quot; view=&quot;Gene.id&quot;&gt;&#10;    &lt;constraint path=&quot;Gene.chromosome.primaryIdentifier&quot; op=&quot;=&quot; value=&quot;X&quot;/&gt;&#10;    &lt;constraint path=&quot;Gene.length&quot; op=&quot;&amp;lt;&quot; value=&quot;1000&quot;/&gt;&#10;&lt;/query&gt;"
            schema="/schema/query.xsd"
            description="A definition of the query to execute in Path-Query XML format">query</param>
        <param type="String[]" required="false"
            description="Extra columns to include as extra information in the ninth column"
            default="Gene.length">view</param>
    </method>
  </metadata>
</servlet-mapping>

<servlet>
  <servlet-name>ws-bed-query</servlet-name>
  <servlet-class>org.intermine.bio.webservice.BEDQueryServlet</servlet-class>
  <init-param>
     <param-name>debug</param-name>
     <param-value>true</param-value>
  </init-param>
</servlet>

<servlet-mapping>
  <servlet-name>ws-bed-query</servlet-name>
  <url-pattern>/service/query/results/bed</url-pattern>
  <metadata>
    <name>BED Query Results</name>
    <minVersion>10</minVersion>
    <method type="POST" authenticationRequired="false" ALSO="GET">
        <summary>Query the Database for Locations.</summary>
        <description format="markdown">
This service provides full access to arbitrary database queries.
Queries are accepted in a serialised XML format, executed and returned
in a streaming manner. The query format is a custom subset of the capabilities
of SQL; see the InterMine wiki for a full description of the query XML
syntax.

This endpoint specialises in dealing with queries for genomic locations,
and returning results in [UCSC BED](http://genome.ucsc.edu/FAQ/FAQformat.html) format.
The user is responsible for ensuring that the query contains only suitable types for export.

A suitable query is one where every view column references a
field of a `SequenceFeature` (including all sub-classes).
The particular field selected is not important, and the object itself
will be selected.
        </description>
        <param required="true"
            type="XML"
            default="&lt;query name=&quot;short genes on the X chromosome&quot; model=&quot;genomic&quot; view=&quot;Gene.id Gene.exons.id&quot;&gt;&#10;    &lt;constraint path=&quot;Gene.chromosome.primaryIdentifier&quot; op=&quot;=&quot; value=&quot;X&quot;/&gt;&#10;    &lt;constraint path=&quot;Gene.length&quot; op=&quot;&amp;lt;&quot; value=&quot;1000&quot;/&gt;&#10;&lt;/query&gt;"
            schema="/schema/query.xsd"
            description="A definition of the query to execute in Path-Query XML format">query</param>
    </method>
  </metadata>
</servlet-mapping>

<servlet>
  <servlet-name>ws-genomic-region-to-list</servlet-name>
  <servlet-class>org.intermine.bio.webservice.GenomicRegionSearchServlet</servlet-class>
  <init-param>
     <param-name>debug</param-name>
     <param-value>true</param-value>
  </init-param>
</servlet>

<servlet-mapping>
  <servlet-name>ws-genomic-region-to-list</servlet-name>
  <url-pattern>/service/regions/list</url-pattern>
</servlet-mapping>

<servlet>
  <servlet-name>ws-genomic-region-to-gff3</servlet-name>
  <servlet-class>org.intermine.bio.webservice.GenomicRegionGFF3Servlet</servlet-class>
  <init-param>
     <param-name>debug</param-name>
     <param-value>true</param-value>
  </init-param>
</servlet>

<servlet-mapping>
  <servlet-name>ws-genomic-region-to-gff3</servlet-name>
  <url-pattern>/service/regions/gff3</url-pattern>
</servlet-mapping>


<servlet>
  <servlet-name>ws-genomic-region-to-fasta</servlet-name>
  <servlet-class>org.intermine.bio.webservice.GenomicRegionFastaServlet</servlet-class>
  <init-param>
     <param-name>debug</param-name>
     <param-value>true</param-value>
  </init-param>
</servlet>

<servlet-mapping>
  <servlet-name>ws-genomic-region-to-fasta</servlet-name>
  <url-pattern>/service/regions/fasta</url-pattern>
</servlet-mapping>

<servlet>
  <servlet-name>ws-genomic-region-to-bed</servlet-name>
  <servlet-class>org.intermine.bio.webservice.GenomicRegionBedServlet</servlet-class>
  <init-param>
     <param-name>debug</param-name>
     <param-value>true</param-value>
  </init-param>
</servlet>

<servlet-mapping>
  <servlet-name>ws-genomic-region-to-bed</servlet-name>
  <url-pattern>/service/regions/bed</url-pattern>
</servlet-mapping>

<servlet>
  <servlet-name>ws-genomic-region-sequence-export</servlet-name>
  <servlet-class>org.intermine.bio.webservice.GenomicRegionSequenceExportServlet</servlet-class>
  <init-param>
     <param-name>debug</param-name>
     <param-value>true</param-value>
  </init-param>
</servlet>

<servlet-mapping>
  <servlet-name>ws-genomic-region-sequence-export</servlet-name>
  <url-pattern>/service/regions/sequence</url-pattern>
</servlet-mapping>

<!--  Allow models to do further replacements -->
<!--@MODEL_INCLUDE@-->
