-- Create the user-defined type for 1-D integer intervals (bioseg)
--

-- Adjust this setting to control where the objects get created.
SET search_path = public;

CREATE FUNCTION $BIOSEG_TYPE_in(cstring)
RETURNS $BIOSEG_TYPE
AS '$libdir/$BIOSEG_TYPE'
LANGUAGE C STRICT IMMUTABLE;

CREATE FUNCTION $BIOSEG_TYPE_out($BIOSEG_TYPE)
RETURNS cstring
AS '$libdir/$BIOSEG_TYPE'
LANGUAGE C STRICT IMMUTABLE;

CREATE FUNCTION $BIOSEG_TYPE_create(int4, int4)
RETURNS $BIOSEG_TYPE
AS '$libdir/$BIOSEG_TYPE'
LANGUAGE C STRICT IMMUTABLE;

CREATE TYPE $BIOSEG_TYPE (
        INTERNALLENGTH = 8,
        INPUT = $BIOSEG_TYPE_in,
        OUTPUT = $BIOSEG_TYPE_out
);

COMMENT ON TYPE $BIOSEG_TYPE IS
'integer point interval ''INT..INT'' or ''INT''';

--
-- External C-functions for R-tree methods
--

-- Left/Right methods

CREATE FUNCTION $BIOSEG_TYPE_over_left($BIOSEG_TYPE, $BIOSEG_TYPE)
RETURNS bool
AS '$libdir/$BIOSEG_TYPE'
LANGUAGE C STRICT IMMUTABLE;

COMMENT ON FUNCTION $BIOSEG_TYPE_over_left($BIOSEG_TYPE, $BIOSEG_TYPE) IS
'overlaps or is left of';

CREATE FUNCTION $BIOSEG_TYPE_over_right($BIOSEG_TYPE, $BIOSEG_TYPE)
RETURNS bool
AS '$libdir/$BIOSEG_TYPE'
LANGUAGE C STRICT IMMUTABLE;

COMMENT ON FUNCTION $BIOSEG_TYPE_over_right($BIOSEG_TYPE, $BIOSEG_TYPE) IS
'overlaps or is right of';

CREATE FUNCTION $BIOSEG_TYPE_left($BIOSEG_TYPE, $BIOSEG_TYPE)
RETURNS bool
AS '$libdir/$BIOSEG_TYPE'
LANGUAGE C STRICT IMMUTABLE;

COMMENT ON FUNCTION $BIOSEG_TYPE_left($BIOSEG_TYPE, $BIOSEG_TYPE) IS
'is left of';

CREATE FUNCTION $BIOSEG_TYPE_right($BIOSEG_TYPE, $BIOSEG_TYPE)
RETURNS bool
AS '$libdir/$BIOSEG_TYPE'
LANGUAGE C STRICT IMMUTABLE;

COMMENT ON FUNCTION $BIOSEG_TYPE_right($BIOSEG_TYPE, $BIOSEG_TYPE) IS
'is right of';


-- Scalar comparison methods

CREATE FUNCTION $BIOSEG_TYPE_lt($BIOSEG_TYPE, $BIOSEG_TYPE)
RETURNS bool
AS '$libdir/$BIOSEG_TYPE'
LANGUAGE C STRICT IMMUTABLE;

COMMENT ON FUNCTION $BIOSEG_TYPE_lt($BIOSEG_TYPE, $BIOSEG_TYPE) IS
'less than';

CREATE FUNCTION $BIOSEG_TYPE_le($BIOSEG_TYPE, $BIOSEG_TYPE)
RETURNS bool
AS '$libdir/$BIOSEG_TYPE'
LANGUAGE C STRICT IMMUTABLE;

COMMENT ON FUNCTION $BIOSEG_TYPE_le($BIOSEG_TYPE, $BIOSEG_TYPE) IS
'less than or equal';

CREATE FUNCTION $BIOSEG_TYPE_gt($BIOSEG_TYPE, $BIOSEG_TYPE)
RETURNS bool
AS '$libdir/$BIOSEG_TYPE'
LANGUAGE C STRICT IMMUTABLE;

COMMENT ON FUNCTION $BIOSEG_TYPE_gt($BIOSEG_TYPE, $BIOSEG_TYPE) IS
'greater than';

CREATE FUNCTION $BIOSEG_TYPE_ge($BIOSEG_TYPE, $BIOSEG_TYPE)
RETURNS bool
AS '$libdir/$BIOSEG_TYPE'
LANGUAGE C STRICT IMMUTABLE;

COMMENT ON FUNCTION $BIOSEG_TYPE_ge($BIOSEG_TYPE, $BIOSEG_TYPE) IS
'greater than or equal';

CREATE FUNCTION $BIOSEG_TYPE_contains($BIOSEG_TYPE, $BIOSEG_TYPE)
RETURNS bool
AS '$libdir/$BIOSEG_TYPE'
LANGUAGE C STRICT IMMUTABLE;

COMMENT ON FUNCTION $BIOSEG_TYPE_contains($BIOSEG_TYPE, $BIOSEG_TYPE) IS
'contains';

CREATE FUNCTION $BIOSEG_TYPE_contained($BIOSEG_TYPE, $BIOSEG_TYPE)
RETURNS bool
AS '$libdir/$BIOSEG_TYPE'
LANGUAGE C STRICT IMMUTABLE;

COMMENT ON FUNCTION $BIOSEG_TYPE_contained($BIOSEG_TYPE, $BIOSEG_TYPE) IS
'contained in';

CREATE FUNCTION $BIOSEG_TYPE_overlap($BIOSEG_TYPE, $BIOSEG_TYPE)
RETURNS bool
AS '$libdir/$BIOSEG_TYPE'
LANGUAGE C STRICT IMMUTABLE;

COMMENT ON FUNCTION $BIOSEG_TYPE_overlap($BIOSEG_TYPE, $BIOSEG_TYPE) IS
'overlaps';

CREATE FUNCTION $BIOSEG_TYPE_same($BIOSEG_TYPE, $BIOSEG_TYPE)
RETURNS bool
AS '$libdir/$BIOSEG_TYPE'
LANGUAGE C STRICT IMMUTABLE;

COMMENT ON FUNCTION $BIOSEG_TYPE_same($BIOSEG_TYPE, $BIOSEG_TYPE) IS
'same as';

CREATE FUNCTION $BIOSEG_TYPE_different($BIOSEG_TYPE, $BIOSEG_TYPE)
RETURNS bool
AS '$libdir/$BIOSEG_TYPE'
LANGUAGE C STRICT IMMUTABLE;

COMMENT ON FUNCTION $BIOSEG_TYPE_different($BIOSEG_TYPE, $BIOSEG_TYPE) IS
'different';

-- support routines for indexing

CREATE OR REPLACE FUNCTION $BIOSEG_TYPE_cmp($BIOSEG_TYPE, $BIOSEG_TYPE)
RETURNS int4
AS '$libdir/$BIOSEG_TYPE'
LANGUAGE C STRICT IMMUTABLE;

COMMENT ON FUNCTION $BIOSEG_TYPE_cmp($BIOSEG_TYPE, $BIOSEG_TYPE) IS 'btree comparison function';

CREATE FUNCTION $BIOSEG_TYPE_union($BIOSEG_TYPE, $BIOSEG_TYPE)
RETURNS $BIOSEG_TYPE
AS '$libdir/$BIOSEG_TYPE'
LANGUAGE C STRICT IMMUTABLE;

CREATE FUNCTION $BIOSEG_TYPE_size($BIOSEG_TYPE)
RETURNS int4
AS '$libdir/$BIOSEG_TYPE'
LANGUAGE C STRICT IMMUTABLE;

-- miscellaneous

CREATE FUNCTION $BIOSEG_TYPE_upper($BIOSEG_TYPE)
RETURNS int4
AS '$libdir/$BIOSEG_TYPE'
LANGUAGE C STRICT IMMUTABLE;

CREATE FUNCTION $BIOSEG_TYPE_lower($BIOSEG_TYPE)
RETURNS int4
AS '$libdir/$BIOSEG_TYPE'
LANGUAGE C STRICT IMMUTABLE;

CREATE FUNCTION $BIOSEG_TYPE_sel(internal, oid, internal, integer)
RETURNS float
AS '$libdir/$BIOSEG_TYPE'
LANGUAGE C STRICT IMMUTABLE;

CREATE FUNCTION $BIOSEG_TYPE_joinsel(internal, oid, internal, smallint)
RETURNS FLOAT
AS '$libdir/$BIOSEG_TYPE'
LANGUAGE C STRICT IMMUTABLE;

CREATE FUNCTION $BIOSEG_TYPE_contsel(internal, oid, internal, integer)
RETURNS float
AS '$libdir/$BIOSEG_TYPE'
LANGUAGE C STRICT IMMUTABLE;

CREATE FUNCTION $BIOSEG_TYPE_contjoinsel(internal, oid, internal, smallint)
RETURNS FLOAT
AS '$libdir/$BIOSEG_TYPE'
LANGUAGE C STRICT IMMUTABLE;


--
-- OPERATORS
--

CREATE OPERATOR < (
        LEFTARG = $BIOSEG_TYPE,
        RIGHTARG = $BIOSEG_TYPE,
        PROCEDURE = $BIOSEG_TYPE_lt,
        COMMUTATOR = '>',
        NEGATOR = '>=',
        RESTRICT = scalarltsel,
        JOIN = scalarltjoinsel
);

CREATE OPERATOR <= (
        LEFTARG = $BIOSEG_TYPE,
        RIGHTARG = $BIOSEG_TYPE,
        PROCEDURE = $BIOSEG_TYPE_le,
        COMMUTATOR = '>=',
        NEGATOR = '>',
        RESTRICT = scalarltsel,
        JOIN = scalarltjoinsel
);

CREATE OPERATOR > (
        LEFTARG = $BIOSEG_TYPE,
        RIGHTARG = $BIOSEG_TYPE,
        PROCEDURE = $BIOSEG_TYPE_gt,
        COMMUTATOR = '<',
        NEGATOR = '<=',
        RESTRICT = scalargtsel,
        JOIN = scalargtjoinsel
);

CREATE OPERATOR >= (
        LEFTARG = $BIOSEG_TYPE,
        RIGHTARG = $BIOSEG_TYPE,
        PROCEDURE = $BIOSEG_TYPE_ge,
        COMMUTATOR = '<=',
        NEGATOR = '<',
        RESTRICT = scalargtsel,
        JOIN = scalargtjoinsel
);

CREATE OPERATOR << (
        LEFTARG = $BIOSEG_TYPE,
        RIGHTARG = $BIOSEG_TYPE,
        PROCEDURE = $BIOSEG_TYPE_left,
        COMMUTATOR = '>>',
        RESTRICT = positionsel,
        JOIN = positionjoinsel
);

CREATE OPERATOR &< (
        LEFTARG = $BIOSEG_TYPE,
        RIGHTARG = $BIOSEG_TYPE,
        PROCEDURE = $BIOSEG_TYPE_over_left,
        RESTRICT = positionsel,
        JOIN = positionjoinsel
);

CREATE OPERATOR && (
        LEFTARG = $BIOSEG_TYPE,
        RIGHTARG = $BIOSEG_TYPE,
        PROCEDURE = $BIOSEG_TYPE_overlap,
        COMMUTATOR = '&&',
        RESTRICT = $BIOSEG_TYPE_sel,
        JOIN = $BIOSEG_TYPE_joinsel
);

CREATE OPERATOR &> (
        LEFTARG = $BIOSEG_TYPE,
        RIGHTARG = $BIOSEG_TYPE,
        PROCEDURE = $BIOSEG_TYPE_over_right,
        RESTRICT = positionsel,
        JOIN = positionjoinsel
);

CREATE OPERATOR >> (
        LEFTARG = $BIOSEG_TYPE,
        RIGHTARG = $BIOSEG_TYPE,
        PROCEDURE = $BIOSEG_TYPE_right,
        COMMUTATOR = '<<',
        RESTRICT = positionsel,
        JOIN = positionjoinsel
);

CREATE OPERATOR = (
        LEFTARG = $BIOSEG_TYPE,
        RIGHTARG = $BIOSEG_TYPE,
        PROCEDURE = $BIOSEG_TYPE_same,
        COMMUTATOR = '=',
        NEGATOR = '<>',
        RESTRICT = eqsel,
        JOIN = eqjoinsel,
        MERGES
);

CREATE OPERATOR <> (
        LEFTARG = $BIOSEG_TYPE,
        RIGHTARG = $BIOSEG_TYPE,
        PROCEDURE = $BIOSEG_TYPE_different,
        COMMUTATOR = '<>',
        NEGATOR = '=',
        RESTRICT = neqsel,
        JOIN = neqjoinsel
);

CREATE OPERATOR @> (
        LEFTARG = $BIOSEG_TYPE,
        RIGHTARG = $BIOSEG_TYPE,
        PROCEDURE = $BIOSEG_TYPE_contains,
        COMMUTATOR = '<@',
        RESTRICT = $BIOSEG_TYPE_contsel,
        JOIN = $BIOSEG_TYPE_contjoinsel
);

CREATE OPERATOR <@ (
        LEFTARG = $BIOSEG_TYPE,
        RIGHTARG = $BIOSEG_TYPE,
        PROCEDURE = $BIOSEG_TYPE_contained,
        COMMUTATOR = '@>',
        RESTRICT = $BIOSEG_TYPE_contsel,
        JOIN = $BIOSEG_TYPE_contjoinsel
);



-- define the GiST support methods
CREATE FUNCTION $BIOSEG_TYPE_gist_consistent(internal,$BIOSEG_TYPE,int4)
RETURNS bool
AS '$libdir/$BIOSEG_TYPE'
LANGUAGE C;

CREATE FUNCTION $BIOSEG_TYPE_gist_compress(internal)
RETURNS internal
AS '$libdir/$BIOSEG_TYPE'
LANGUAGE C;

CREATE FUNCTION $BIOSEG_TYPE_gist_decompress(internal)
RETURNS internal
AS '$libdir/$BIOSEG_TYPE'
LANGUAGE C;

CREATE FUNCTION $BIOSEG_TYPE_gist_penalty(internal,internal,internal)
RETURNS internal
AS '$libdir/$BIOSEG_TYPE'
LANGUAGE C STRICT;

CREATE FUNCTION $BIOSEG_TYPE_gist_picksplit(internal, internal)
RETURNS internal
AS '$libdir/$BIOSEG_TYPE'
LANGUAGE C;

CREATE FUNCTION $BIOSEG_TYPE_gist_union(internal, internal)
RETURNS $BIOSEG_TYPE
AS '$libdir/$BIOSEG_TYPE'
LANGUAGE C;

CREATE FUNCTION $BIOSEG_TYPE_gist_same($BIOSEG_TYPE, $BIOSEG_TYPE, internal)
RETURNS internal
AS '$libdir/$BIOSEG_TYPE'
LANGUAGE C;


-- Create the operator classes for indexing

CREATE OPERATOR CLASS $BIOSEG_TYPE_ops
    DEFAULT FOR TYPE $BIOSEG_TYPE USING btree AS
        OPERATOR        1       < ,
        OPERATOR        2       <= ,
        OPERATOR        3       = ,
        OPERATOR        4       >= ,
        OPERATOR        5       > ,
        FUNCTION        1       $BIOSEG_TYPE_cmp($BIOSEG_TYPE, $BIOSEG_TYPE);

CREATE OPERATOR CLASS gist_$BIOSEG_TYPE_ops
DEFAULT FOR TYPE $BIOSEG_TYPE USING gist
AS
        OPERATOR        1       << ,
        OPERATOR        2       &< ,
        OPERATOR        3       && ,
        OPERATOR        4       &> ,
        OPERATOR        5       >> ,
        OPERATOR        6       = ,
        OPERATOR        7       @> ,
        OPERATOR        8       <@ ,
        FUNCTION        1       $BIOSEG_TYPE_gist_consistent (internal, $BIOSEG_TYPE, int4),
        FUNCTION        2       $BIOSEG_TYPE_gist_union (internal, internal),
        FUNCTION        3       $BIOSEG_TYPE_gist_compress (internal),
        FUNCTION        4       $BIOSEG_TYPE_gist_decompress (internal),
        FUNCTION        5       $BIOSEG_TYPE_gist_penalty (internal, internal, internal),
        FUNCTION        6       $BIOSEG_TYPE_gist_picksplit (internal, internal),
        FUNCTION        7       $BIOSEG_TYPE_gist_same ($BIOSEG_TYPE, $BIOSEG_TYPE, internal);
