#!/usr/bin/perl -w

use strict;

my $proj_name = shift;

$proj_name =~ s{/+$}{};

chdir $proj_name or die "can't chdir() to $proj_name\n";

sub svn_command
{
  my ($command) = shift;

  system("svn $command") == 0 or die "execute of 'svn $command' failed: $?\n";
}

svn_command("mkdir task");

chdir ('task') or die;

my @commands = ("mkdir lib", "mkdir resources", "mkdir src");

for my $command (@commands) {
  svn_command ($command);
}


sub build_file_contents
{
  return <<"BUILD_FILE_END";
<project name="$proj_name-tasks" default="default" basedir=".">
  <description>build $proj_name tasks</description>
  <import file="../../../imbuild/library.xml"/> 
</project>
BUILD_FILE_END
}

sub project_file_contents
{
  return <<"PROJ_PROPS_END";
compile.dependencies = intermine/integrate/main
PROJ_PROPS_END
}


my $build_file = 'build.xml';

open my $build_file_handle, '>', $build_file
   or die "can't open $build_file for writing: $?\n";

print $build_file_handle build_file_contents();

close $build_file_handle or die "can't close $build_file: $?\n";


my $proj_props = 'project.properties';

open my $proj_props_handle, '>', $proj_props
   or die "can't open $proj_props for writing: $?\n";

print $proj_props_handle project_file_contents();

close $proj_props_handle or die "can't close $proj_props: $?\n";

my @add_commands = ("add build.xml", "add project.properties");

for my $command (@add_commands) {
  svn_command ($command);
}
