#!/usr/bin/perl -w

use strict;

my $proj_name = shift;

$proj_name =~ s{/+$}{};

chdir $proj_name or die "can't chdir() to $proj_name\n";

sub svn_command
{
  my ($command) = shift;

  system("svn $command") == 0 or die "execute of 'svn $command' failed: $?\n";
}

my @commands = ("mkdir test", "mkdir test/lib", "mkdir test/resources", "mkdir test/src");

for my $command (@commands) {
  svn_command ($command);
}

chdir ('test');

sub build_file_contents
{
  return <<"BUILD_FILE_END";
<project name="sources-$proj_name-test" default="default" basedir="."
         xmlns:imtestsproj="http://www.intermine.org/ns/im-tests-proj/1"
         xmlns:imdbproj="http://www.intermine.org/ns/im-task-proj/1">

  <description>build and test sources-$proj_name-test</description>

  <import file="../../../imbuild/tests.xml"/>
  <import file="../../../imbuild/task.xml"/>

  <target name="-pre-test" depends="build-db-genomic-fulldata-test"/>

  <target name="do-test" depends="-init-macrodef-junit">
    <imtestsproj:junit/>
  </target>

  <target name="-define-task-classpath">
    <!-- Override to alter the classpath created -->
    <path id="task.class.path">
      <pathelement location="\${build.task.dir}"/>
      <pathelement location="\${build.test.resources.dir}"/>
      <path refid="project.execute.path"/>
    </path>
  </target>

  <target name="-init-build-db" depends="init, -init-deps, -init-task-xml"/>

  <target name="build-db-genomic-fulldata-test" depends="-init-build-db">
    <imdbproj:build-db osname="os.genomic-fulldata-test"
                       model="fulldata"/>
  </target>

  <!-- index the fulldata test database -->
  <target name="create-indexes-genmic-fulldata-test" depends="-init-build-db">
    <create-indexes alias="os.genomic-fulldata-test" attributeIndexes="false"/>
  </target>

</project>
BUILD_FILE_END
}

sub project_file_contents
{
  return <<"PROJ_PROPS_END";
compile.dependencies = sources/$proj_name/task,\
sources/$proj_name/model,\
intermine/integrate/test,\
flymine/dbmodel

# choose the intermine.properties file from \$HOME:
intermine.properties.file = flymine.properties

default.intermine.properties.file = ../../../new-flymine/default.intermine.test.properties

# classpath to instrument with emma
instrument.path=../main/dist/intermine-objectstore.jar
instrument.src.path=../main/src/
PROJ_PROPS_END
}


my $build_file = 'build.xml';

open my $build_file_handle, '>', $build_file
   or die "can't open $build_file for writing: $?\n";

print $build_file_handle build_file_contents();

close $build_file_handle or die "can't close $build_file: $?\n";


my $proj_props = 'project.properties';

open my $proj_props_handle, '>', $proj_props
   or die "can't open $proj_props for writing: $?\n";

print $proj_props_handle project_file_contents();

close $proj_props_handle or die "can't close $proj_props: $?\n";

my @add_commands = ("add build.xml", "add project.properties");

for my $command (@add_commands) {
  svn_command ($command);
}
