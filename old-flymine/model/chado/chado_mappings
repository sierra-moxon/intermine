#Author = author
#Author.givennames = author.givennames
#Author.publications = author.pubs
#Author.surname = author.surname

#ComputationalAnalysis = analysis
#ComputationalAnalysis.algorithm = analysis.program

#ComputationalResult = analysisfeature
#ComputationalResult.analysis = analysisfeature.analysis
#ComputationalResult.score = analysisfeature.rawscore

# ignore cv and cvterm

LocatedSequenceFeature = feature
LocatedSequenceFeature.identifer = feature.uniquename
LocatedSequenceFeature.organism = feature.organism
LocatedSequenceFeature.residues = feature.residues
#LocatedSequenceFeature.seqlen = feature.seqlen
#LocatedSequenceFeature.synonyms = feature.dbxref, feature.feature_synonyms

#%types = [cDNA_clone, chromosome_arm, chromosome_band, enhancer, exon, five_prime_untranslated_region, gene,
#        golden_path_region, insertion_site, intron, mRNA, mature_peptide, ncRNA, oligonucleotide, point_mutation,
#        polyA_site, processed_transcript, protein, pseudogene, rRNA, region, regulatory_region, remark,
#        repeat_region, sequence_variant, signal_peptide, snRNA, snoRNA, tRNA, three_prime_untranslated_region,
#        transposable_element, transposable_element_insertion_site]

#Location = featureloc [feature.type.name in %types] && [srcfeature.type.name in %types]
Location = featureloc
Location.end = featureloc.fmax
Location.endIsPartial = featureloc.is_fmax_partial
Location.object = featureloc.srcfeature
Location.phase = featureloc.phase
Location.start = featureloc.fmin
Location.startIsPartial = featureloc.is_fmin_partial
Location.strand = featureloc.strand
Location.subject = featureloc.feature

Organism = organism
Organism.abbreviation = organism.abbreviation

#Publication = pub
#Publication.authors = pub.authors
#Publication.issue = pub.issue
#Publication.journal = pub.pubplace
#Publication.pages = pub.pages
#Publication.pubprops = pub.pubprops
#Publication.pyear = pub.pyear
#Publication.title = pub.title
#Publication.volume = pub.volume

SimpleRelation = feature_relationship
SimpleRelation.object = feature_relationship.object
SimpleRelation.subject = feature_relationship.subject

#RankedRelation = feature_relationship [rank != null]
#RankedRelation.object = feature_relationship.object
#RankedRelation.subject = feature_relationship.subject

#Synonym = feature_dbxref, feature_synonym
#Synonym.source = feature_synonym.pub
#Synonym.subject = feature_synonym.feature, feature_dbxref.feature
#Synonym.type = 

# SOFA types map to BioEntity subclasses

#CDNAClone = feature [type.name = cDNA_clone] [type.cv.name = SO]
#CDNAClone.identifier = feature.uniquename

#CDS = feature [type.name = CDS] [type.cv.name = SO]
#CDS.identifier = feature.uniquename

#Chromosome = feature [type.name = chromosome] [type.cv.name = SO]
#Chromosome.identifier = feature.uniquename

#ChromosomeBand = feature [type.name = chromosome_band] [type.cv.name = SO]
#ChromosomeBand.identifier = feature.uniquename

#Enhancer = feature [type.name = enhancer] [type.cv.name = SO]
#Enahancer.identifier = feature.uniquename

#EST = feature [type.name = EST] [type.cv.name = SO]
#EST.identifier = feature.uniquename

#Exon = feature [type.name = exon] [type.cv.name = SO]
#Exon.identifier = feature.uniquename

#FivePrimeUTR = feature [type.name = five_prime_untranslated_region] [type.cv.name = SO]
#FivePrimeUTR.identifier = feature.uniquename

#Gene = feature [type.name = gene] [type.cv.name = SO]
#Gene.identifier = feature.uniquename
Gene.name = feature.name

#GoldenPathFragment = feature [type.name = golden_path_region] [type.cv.name = SO]
#GoldenPathFragment.identifier = feature.uniquename

#Intron = feature [type.name = intron] [type.cv.name = SO]
#Intron.identifier = feature.uniquename

#InsertionSite = feature [type.name = insertion_site] [type.cv.name = SO]
#InsertionSite.identifier = feature.uniquename

#MRNA = feature [type.name = mRNA] [type.cv.name = SO]
#MRNA.identifier = feature.name
#MRNA.synonyms += [Synonym: value = feature.uniquename, type = identifier, source = @flybase]

#Match = feature [type.name = match] [type.cv.name = SO]
#Match.identifier = feature.uniquename

#MaturePeptide = feature [type.name = mature_peptide] [type.cv.name = SO]
#MaturePeptide.identifier = feature.uniquename

#NcRNA.feature [type.name = ncRNA] [type.cv.name = SO]
#NcRNA.identifier = feature.uniquename

#Oligo = feature [type.name = oligonucleotide] [type.cv.name = SO]
#Oligo.identifier = feature.uniquename

#PointMutation = feature [type.name = point_mutation] [type.cv.name = SO]
#PointMutation.identifier = feature.uniquename

#PolyASite = feature [type.name = polyA_site] [type.cv.name = SO]
#PolyASite.identifier = feature.uniquename

#ProcessedTranscript = feature [type.name = process_transcript] [type.cv.name = SO]
#ProcessedTranscript.identifier = feature.uniquename

# identifier?
#Protein = feature [type.name = protein] [type.cv.name = SO]
#Protein.identifier = feature.uniquename

#Pseudogene = feature [type.name = pseudogene] [type.cv.name = SO]
#Pseudogene.identifier = feature.uniquename

#RRNA = feature [type.name = rRNA] [type.cv.name = SO]
#RRNA.identifier = feature.uniquename

#Region = feature [type.name = region] [type.cv.name = SO]
#Region.identifier = feature.uniquename

#RegulatoryRegion = feature [type.name = regulatory_region] [type.cv.name = SO]
#RegulatoryRegion.identifier = feature.uniquename

#Remark = feature [type.name = remark] [type.cv.name = SO]
#Remark.identifier = feature.uniquename

#RepeatRegion = feature [type.name = repeat_region] [type.cv.name = SO]
#RepeatRegion.identifier = feature.uniquename

#SequenceVariant = feature [type.name = sequence_variant] [type.cv.name = SO]
#SequenceVariant.identifier = feature.uniquename

#SignalPeptide = feature [type.name = signal_peptide] [type.cv.name = SO]
#SignalPeptide.identifier = feature.uniquename

#SnRNA = feature [type.name = snRNA] [type.cv.name = SO]
#SnRNA.identifier = feature.uniquename

#SnoRNA = feature [type.name = snoRNA] [type.cv.name = SO]
#SnoRNA.identifier = feature.uniquename

#TRNA = feature [type.name = tRNA] [type.cv.name = SO]
#TRNA.identifier = feature.uniquename

#ThreePrimeUTR = feature [type.name = three_prime_untranslated_region] [type.cv.name = SO]
#ThreePrimeUTR.identifier = feature.uniquename

#TransposableElement = feature [type.name = transposable_element] [type.cv.name = SO]
#TransposableElement.identifier = feature.uniquename

#TransposableElementInsertionSite = feature [type.name = transposable_element_insertion_site] [type.cv.name = SO]
#TransposableElementInsertionSite.identifier = feature.uniquename





