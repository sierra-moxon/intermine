CREATE TABLE COMMON_ANNOTATION (
	ANN_ID	VARCHAR(7) NOT NULL,
	NAME	VARCHAR(50),
	TEXT	TEXT NOT NULL,
	COMMENTS	VARCHAR(100),
	UNIQUE PK_COMMON_ANNOTATION (ANN_ID)
);
CREATE TABLE CV_DATABASE (
	DBCODE	CHAR(1) NOT NULL,
	DBNAME	VARCHAR(20) NOT NULL,
	DBORDER	NUMERIC(3,0) NOT NULL,
	DBSHORT	VARCHAR(10) NOT NULL,
	UNIQUE PK_DATABASE (DBCODE),
	UNIQUE UQ_CV_DATABASE$DATABASE (DBNAME),
	UNIQUE UQ_CV_DATABASE$DBORDER (DBORDER),
	UNIQUE UQ_CV_DATABASE$DBSHORT (DBSHORT)
);
CREATE TABLE CV_ENTRY_TYPE (
	CODE	CHAR(1) NOT NULL,
	ABBREV	VARCHAR(20) NOT NULL,
	DESCRIPTION	TEXT,
	UNIQUE PK_ENTRY_TYPE (CODE),
	UNIQUE UQ_ENTRY_TYPE$ABBREV (ABBREV)
);

CREATE TABLE CV_EVIDENCE (
	CODE	CHAR(3) NOT NULL,
	ABBREV	VARCHAR(10) NOT NULL,
	DESCRIPTION	TEXT,
	UNIQUE PK_EVIDENCE (CODE),
	UNIQUE UQ_EVIDENCE$ABBREV (ABBREV)
);
CREATE TABLE CV_RELATION (
	CODE	CHAR(2) NOT NULL,
	ABBREV	VARCHAR(10) NOT NULL,
	DESCRIPTION	TEXT,
	FORWARD	VARCHAR(30) NOT NULL,
	REVERSE	VARCHAR(30) NOT NULL,
	UNIQUE PK_RELATION (CODE),
	UNIQUE UQ_RELATION$ABBREV (ABBREV)
);

CREATE TABLE CV_SYNONYM (
	CODE	CHAR(4) NOT NULL,
	DESCRIPTION	VARCHAR(80) NOT NULL,
	UNIQUE PK_SYNONYM (CODE)
);
CREATE TABLE DB_VERSION (
	DBCODE	CHAR(1) NOT NULL,
	VERSION	VARCHAR(20) NOT NULL,
	ENTRY_COUNT	NUMERIC(10,0) NOT NULL,
	FILE_DATE	DATETIME NOT NULL,
	LOAD_DATE	DATETIME DEFAULT '' NOT NULL,
	TIMESTAMP	DATETIME DEFAULT '' NOT NULL,
	USERSTAMP	VARCHAR(30) DEFAULT '' NOT NULL,
	UNIQUE PK_DB_VERSION (DBCODE)
);
CREATE TABLE ENTRY (
	ENTRY_AC	VARCHAR(9) NOT NULL,
	ENTRY_TYPE	CHAR(1) NOT NULL,
	NAME	VARCHAR(100),
	CHECKED	CHAR(1) DEFAULT '' NOT NULL,
	CREATED	DATETIME DEFAULT '' NOT NULL,
	TIMESTAMP	DATETIME DEFAULT '' NOT NULL,
	USERSTAMP	VARCHAR(30) DEFAULT '' NOT NULL,
	SHORT_NAME	VARCHAR(40),
	UNIQUE PK_ENTRY (ENTRY_AC),
	UNIQUE UI_ENTRY$AC$NAME (ENTRY_AC,NAME),
	UNIQUE UQ_ENTRY_NAME$NAME (NAME),
	UNIQUE UQ_ENTRY_SHORT_NAME$SHORT_NAME (SHORT_NAME)
);
CREATE TABLE ENTRY2COMMON (
	ENTRY_AC	VARCHAR(9) NOT NULL,
	ANN_ID	VARCHAR(7) NOT NULL,
	ORDER_IN	NUMERIC(3,0) NOT NULL,
	PRIMARY KEY (ENTRY_AC,ANN_ID,ORDER_IN),
	UNIQUE UQ_ENTRY2COMMON$1 (ENTRY_AC,ANN_ID),
	UNIQUE UQ_ENTRY2COMMON$2 (ENTRY_AC,ORDER_IN)
);
CREATE TABLE ENTRY2COMP (
	ENTRY1_AC	VARCHAR(9) NOT NULL,
	ENTRY2_AC	VARCHAR(9) NOT NULL,
	RELATION	CHAR(2) NOT NULL,
	TIMESTAMP	DATETIME DEFAULT '' NOT NULL,
	USERSTAMP	VARCHAR(30) DEFAULT '' NOT NULL,
	PRIMARY KEY (ENTRY1_AC,ENTRY2_AC),
	UNIQUE UI_ENTRY2COMP$FK_E2_E1 (ENTRY2_AC,ENTRY1_AC),
	INDEX I_ENTRY2COMP$FK_RELATION (RELATION)
);
CREATE TABLE ENTRY2ENTRY (
	ENTRY_AC	VARCHAR(9) NOT NULL,
	PARENT_AC	VARCHAR(9) NOT NULL,
	RELATION	CHAR(2) NOT NULL,
	TIMESTAMP	DATETIME DEFAULT '' NOT NULL,
	USERSTAMP	VARCHAR(30) DEFAULT '' NOT NULL,
	PRIMARY KEY (ENTRY_AC,PARENT_AC),
	UNIQUE UQ_ENTRY2ENTRY$ENTRY_AC (ENTRY_AC),
	UNIQUE UI_ENTRY2ENTRY$FK_PAR_ENT (PARENT_AC,ENTRY_AC),
	INDEX I_ENTRY2ENTRY$FK_RELATION (RELATION)
);
CREATE TABLE ENTRY2METHOD (
	ENTRY_AC	VARCHAR(9) NOT NULL,
	METHOD_AC	VARCHAR(25) NOT NULL,
	EVIDENCE	CHAR(3) NOT NULL,
	TIMESTAMP	DATETIME DEFAULT '' NOT NULL,
	USERSTAMP	VARCHAR(30) DEFAULT '' NOT NULL,
	IDA	CHAR(1),
	PRIMARY KEY (ENTRY_AC,METHOD_AC),
	UNIQUE UQ_ENTRY2METHOD$METHOD (METHOD_AC),
	UNIQUE UI_ENTRY2METHOD$METHOD$ENTRY (METHOD_AC,ENTRY_AC)
);
CREATE TABLE ENTRY_XREF (
	ENTRY_AC	VARCHAR(9) NOT NULL,
	DBCODE	CHAR(1) NOT NULL,
	AC	VARCHAR(30) NOT NULL,
	NAME	VARCHAR(70),
	PRIMARY KEY (ENTRY_AC,DBCODE,AC)
);
CREATE TABLE MATCHES (
	PROTEIN_AC	VARCHAR(6) NOT NULL,
	METHOD_AC	VARCHAR(25) NOT NULL,
	POS_FROM	NUMERIC(5,0),
	POS_TO	NUMERIC(5,0),
	STATUS	CHAR(1) DEFAULT '' NOT NULL,
	DBCODE	CHAR(1) NOT NULL,
	EVIDENCE	CHAR(3),
	SEQ_DATE	DATETIME DEFAULT '' NOT NULL,
	MATCH_DATE	DATETIME DEFAULT '' NOT NULL,
	TIMESTAMP	DATETIME DEFAULT '' NOT NULL,
	USERSTAMP	VARCHAR(30) DEFAULT '' NOT NULL,
	SCORE	NUMERIC(126,0),
	UNIQUE UQ_MATCH_$P$M$POS_TO (POS_TO,PROTEIN_AC,METHOD_AC),
	UNIQUE UQ_MATCH (PROTEIN_AC,METHOD_AC,POS_FROM,POS_TO),
	UNIQUE UQ_MATCH_$P$M$POS_FROM (POS_FROM,PROTEIN_AC,METHOD_AC),
	INDEX I_MATCH$FK_STATUS (STATUS),
	INDEX I_MATCH$METHOD_AC (METHOD_AC)
);
CREATE TABLE METHOD (
	METHOD_AC	VARCHAR(25) NOT NULL,
	NAME	VARCHAR(30) NOT NULL,
	DBCODE	CHAR(1) NOT NULL,
	METHOD_DATE	DATETIME DEFAULT '' NOT NULL,
	TIMESTAMP	DATETIME DEFAULT '' NOT NULL,
	USERSTAMP	VARCHAR(30) DEFAULT '' NOT NULL,
	SKIP_FLAG	CHAR(1) DEFAULT '' NOT NULL,
	UNIQUE PK_METHOD (METHOD_AC),
	INDEX I_METHOD$DBCODE (DBCODE)
);
CREATE TABLE PROTEIN (
	PROTEIN_AC	VARCHAR(6) NOT NULL,
	NAME	VARCHAR(12) NOT NULL,
	DBCODE	CHAR(1) NOT NULL,
	CRC64	CHAR(16) NOT NULL,
	LEN	NUMERIC(5,0) NOT NULL,
	TIMESTAMP	DATETIME DEFAULT '' NOT NULL,
	USERSTAMP	VARCHAR(30) DEFAULT '' NOT NULL,
	FRAGMENT	CHAR(1) NOT NULL,
	STRUCT_FLAG	CHAR(1) NOT NULL,
	UNIQUE PK_PROTEIN (PROTEIN_AC),
	INDEX I_PROTEIN$CRC64 (CRC64)
);
CREATE TABLE SUPERMATCH (
	PROTEIN_AC	VARCHAR(6) NOT NULL,
	ENTRY_AC	VARCHAR(9) NOT NULL,
	POS_FROM	NUMERIC(5,0) NOT NULL,
	POS_TO	NUMERIC(5,0) NOT NULL,
	PRIMARY KEY (PROTEIN_AC,ENTRY_AC,POS_FROM,POS_TO),
	INDEX I_SUPERMATCH$FK_ENTRY_AC (ENTRY_AC)
);
CREATE TABLE TAXONOMY2PROTEIN (
	PROTEIN_AC	VARCHAR(6) NOT NULL,
	TAX_ID	NUMERIC(15,0) NOT NULL,
	HIERARCHY	VARCHAR(200),
	TAX_NAME_CONCAT	VARCHAR(80),
	PRIMARY KEY (PROTEIN_AC,TAX_ID)
);
CREATE TABLE TAX_NAME_TO_ID (
	TAX_NAME	VARCHAR(30),
	TAX_ID	NUMERIC(15,0)
);
