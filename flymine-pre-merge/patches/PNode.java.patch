--- src/edu/umd/cs/piccolo/PNode.java.old	2006-01-13 11:39:01.000000000 +0000
+++ src/edu/umd/cs/piccolo/PNode.java	2006-01-13 12:09:59.000000000 +0000
@@ -2346,17 +2346,20 @@
 		PBounds imageBounds = getFullBounds();		
 
 		imageBounds.expandNearestIntegerDimensions();	
-		
-		if(width / imageBounds.width < height / imageBounds.height) {
-			double scale = width / imageBounds.width;
-			height = (int) (imageBounds.height * scale);
-		} else {
-			double scale = height / imageBounds.height;
-			width = (int) (imageBounds.width * scale);
-		}
 
-		GraphicsConfiguration graphicsConfiguration = GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice().getDefaultConfiguration();
-		BufferedImage result = graphicsConfiguration.createCompatibleImage(width, height, Transparency.TRANSLUCENT);
+		// florian: removed code 
+		//    -> do not rescale image but set image size to the specified width/height	
+	
+		// florian: added this if statement to make this run in headless mode
+		// do not use graphicsConfiguration cause it will throw HeadlessException
+		// instead create default BufferedImage
+		BufferedImage result;
+		if  (GraphicsEnvironment.isHeadless()) { 
+			result = new BufferedImage(width, height, Transparency.TRANSLUCENT);
+		} else { // if not in headless mode do the original thing
+			GraphicsConfiguration graphicsConfiguration = GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice().getDefaultConfiguration();
+			result = graphicsConfiguration.createCompatibleImage(width, height, Transparency.TRANSLUCENT);
+		}
 
 		return toImage(result, backGroundPaint);
 	}
