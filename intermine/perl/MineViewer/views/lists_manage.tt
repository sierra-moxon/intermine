<div>
    <button id="action">Merge</button>
    <select id="action-chooser">
        <option selected value="merge">Merge</option>
        <option value="subtract">Subtract</option>
        <option value="intersect">Intersect</option>
        <option value="diff">Difference</option>
        <option value="delete">Delete</option>
    </select>
            
    <div id="operation-boxes-container">
        <div id="operation-boxes">
            <select id="list-operand-selector" multiple="multiple" style="width:50%">
                [% FOREACH list IN lists %]
                <option value="[% list.name %]">
                    [% list.name %] ([% list.size %] [% pluraliser(list.type) %])
                </option>
                [% END %]
            </select>
            <span id="rhs-operand-box"  style="display:none">
                <select id="rhs-operand-selector" multiple="multiple">
                    [% FOREACH list IN lists %]
                    <option value="[% list.name %]">
                        [% list.name %] ([% list.size %] [% pluraliser(list.type) %])
                    </option>
                    [% END %]
                </select>
            </span>
        </div>
    </div>
</div>

<div id="list-namer" title="Choose A Name for Your List" style="display:none">
    <p>Choose a name for your new list:</p>
    <input type="text" id="created-list-name">
    <p>Describe this list:</p>
    <input type="text" id="created-list-desc">
</div>

<script type="text/javascript">
function handleOperationSelection() {
    var operation = jQuery('#list-operation-selector').val();
    console.log("Current operation is: " + operation);
    jQuery('#operation-boxes').children('div').each(function(i, e) {
        if (e.id == (operation + "-box")) {
            jQuery(e).show();
        } else {
            jQuery(e).hide();
        }
    });
}
[% ops = [
    {
        kw = "merge"
        adj = "Merged"
        noun = "Merger"
    },
    {
        kw = "intersect"
        adj = "Intersected"
        noun = "Intersection"
    },
    {
        kw = "diff"
        adj = "Symmetric difference"
        noun = "Symmetric difference"
    }] %]

var handler_for = {};
[% FOREACH op IN ops %]
    handler_for['[% op.kw %]'] = function() {
        var checked = jQuery('#list-operand-selector').multiselect('getChecked');
        var list_names = [];
        checked.each(function(i, e) {list_names.push(e.value)});
        if (list_names.length < 1) {
            $.jGrowl("No lists selected");
            return;
        }
        var now = new Date();
        var dateString = (now + "").split(' ').slice(0, 5).join(' ')
        jQuery('#created-list-name').val("[% op.adj %] List " + dateString);
        jQuery('#created-list-desc').val("[% op.noun %] of " + list_names.join(' and '));
        openListCreationDialog(list_names, '[% op.kw %]');
    };
[% END %]
handler_for["delete"] = function() {
    var checked = jQuery('#list-operand-selector').multiselect('getChecked');
    var list_names = [];
    checked.each(function(i, e) {list_names.push(e.value)});

    jQuery('#delendum').html($.map(list_names, function(e) {return '<b>' + e + '</b>'}).join(' and '));
    jQuery('#confirm-del').dialog({
        autoOpen: true,
        modal: true,
        width: 400,
        buttons: {
            "Delete": function() {
                jQuery(this).dialog('close');
                jQuery.post("[% proxy.uri_for('/deletelists') %]", 
                    { lists: list_names.join(';') }, function(results) {
                        handler(results);
                        window.location.hash = null;
                        jQuery('#lists option').each(function(i, e) {
                            if (jQuery.inArray(jQuery(e).val(), list_names) >= 0) {
                                jQuery(e).remove();
                            } 
                        });
                        jQuery('#lists option').each(function(i, e) {
                            if (jQuery.inArray(jQuery(e).val(), list_names) < 0) {
                                jQuery(e).attr('selected' , true);
                                return false;
                            }
                        });
                        handleListSelection();
                    }, "json");
            },
            "Cancel": function() {jQuery(this).dialog('close')}
        }
    });
};

handler_for["subtract"] = function() {
    var checked = jQuery('#list-operand-selector').multiselect('getChecked');
    var list_names = [];
    checked.each(function(i, e) {list_names.push(e.value)});

    var rhs_checked = jQuery('#rhs-operand-selector').multiselect('getChecked');
    var rhs_names = [];
    rhs_checked.each(function(i, e) {rhs_names.push(e.value)});
    var now = new Date();
    var dateString = (now + "").split(' ').slice(0, 5).join(' ')
    jQuery('#created-list-name').val("Subtracted List " + dateString);
    jQuery('#created-list-desc').val("Subtraction of " + rhs_names.join(' and ') + " from " + list_names.join(' and '));
    openListCreationDialog(list_names, 'subtract', rhs_names);
};

function initialiseOpHandlers() {
    $("#list-operand-selector").multiselect({
        noneSelectedText: "Select lists",
        selectedList: 1,
        minWidth: 500
    }).multiselectfilter();
    $("#rhs-operand-selector").multiselect({
        noneSelectedText: "Select lists to subtract",
        selectedList: 1,
        minWidth: 500
    }).multiselectfilter();
}

var handler = function(res) {
    handleResults(res);
    jQuery('#operation-boxes-container').load(
        "[% proxy.uri_for(request.path) %] #operation-boxes", 
        function() {handleOperationSelection(), initialiseOpHandlers()});
    };

jQuery(function() {
    $('#action').button()
                .click(handler_for[jQuery('#action-chooser').val()]);
    $("#action-chooser").multiselect({
        multiple: false,
        header: "Select a list operation",
        selectedText: "Select a list operation"
        }).bind("multiselectclick", function(event, ui) {
            jQuery('#action').button("option", "label", ui.text).unbind('click').click(handler_for[ui.value]);
            if (ui.value == "subtract") {
                jQuery('#rhs-operand-box').show();
            } else {
                jQuery('#rhs-operand-box').hide();
            }
        });
//    handleOperationSelection();
    //jQuery('#list-operation-selector').change(handleOperationSelection);
    initialiseOpHandlers();
});

function openListCreationDialog(list_names, operation, rhs_names) {
    jQuery('#list-namer').dialog({
        autoOpen: true,
        width: 400,
        modal: true,
        buttons: {
            "OK": function() {
                jQuery(this).dialog('close');
                jQuery.post("[% proxy.uri_for('/performlistop') %]", {
                    lists: list_names.join(';'),
                    rhs: (rhs_names) ? rhs_names.join(';') : "",
                    newname: jQuery('#created-list-name').val(),
                    newdesc: jQuery('#created-list-desc').val(),
                    op: operation
                }, handler, "json");
            },
            "Close": function() {jQuery(this).dialog('close')}
        }
    });
}

</script>



