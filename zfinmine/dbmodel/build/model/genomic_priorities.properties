#contains only classes that come from more than one source
#for each class contained every source for that class must be listed

# priority for fields declared in superclass are not overridden by different order in subclass
# e.g. identfier and organism always have priority as defined in BioEntity

# An example:
#Gene.symbol = \
#  wormbase-identifiers, \
#  uniprot, \
#  flyreg, \
#  *

Marker = zfin_markers, zfinFeatureMarkerRelationships, *

# BioEntity.organism = *, go-annotation, zfin_markers, zfinGenotypes, zfin_features
# BioEntity.name = zfin_markers, zfin_features,  *

# Organism = *, entrez-organism 
Gene = zfin_markers, zfinOrthologues, zebrafishPanther, zfinFeatureMarkerRelationships, fish, *
Clone = zfin_markers, zfin_expression, *
#Insertion = zfin_features, zfinFeatureMarkerRelationships, zfinGenotypes, zfin_markers, *
#Deletion = zfin_features, zfinFeatureMarkerRelationships, zfinGenotypes, zfin_markers, *
#PointMutation = zfin_features, zfinFeatureMarkerRelationships, zfinGenotypes, zfin_markers, *
#TransgenicInsertion = zfin_features, zfinFeatureMarkerRelationships, zfinGenotypes, zfin_markers, *
SequenceAlteration = zfin_genofeats, zfin_features, zfinFeatureMarkerRelationships, zfinGenotypes, zfin_markers, fish, *
#Inversion = zfin_features, zfinFeatureMarkerRelationships, zfinGenotypes, *
#Translocation = zfin_features, zfinFeatureMarkerRelationships, zfinGenotypes, *
#ChromosomalDeletion = zfin_features, zfinFeatureMarkerRelationships, zfinGenotypes, *
#ComplexSubstitution = zfin_features, zfinFeatureMarkerRelationships, zfinGenotypes, *
#RNAClone = zfin_markers, *
#DNAClone = zfin_markers, *
Construct = zfin_markers, fish, *
#SimpleSequenceLengthVariation = zfin_markers, *
STS = zfin_markers, *
#SNP = zfin_features, zfinFeatureMarkerRelationships, zfinGenotypes, zfin_markers, *
MorpholinoOligo = zfin_markers, zfinExperiments, fish, *
EFG = zfin_markers, *
RAPD = zfin_markers, *
#Pathway = kegg, *
Transcript = zfin_markers, fish, *
Pseudogene = zfin_markers, *
Figure = zfinFigures, zfin_phenotypes, zfin_expression, *
Fish = fish, *
#SOTerm = so, go-annotation, fish, zfin_expression, *
# BioEntity.secondaryIdentifier = *

Phenotype = zfin_phenotypes, fish, *

Gene.symbol = zfin_markers, zfinOrthologues, zebrafishPanther, *

Gene.name = zfin_markers, zfinOrthologues, zebrafishPanther,  *

Homologue = zfinOrthologues, zebrafishPanther, *

OrthologueEvidence = zfinOrthologues, zebrafishPanther, *

OrthologueEvidenceCode = zfinOrthologues, zebrafishPanther, *

Genotype = zfinGenotypes, zfin_genofeats, zfin_markers, zfinFeatureMarkerRelationships, *
#Genotype.features = zfin_genofeats, zfinGenotypes, *

#Feature = zfin_genofeats, zfin_features, zfinFeatureMarkerRelationships, *

OntologyTerm = zfin_anatomy, zfin_pato, zfin_stages, go, so, zfin_expression, zfin_phenotypes, zfinOrthologues, zebrafishPanther, go-annotation,  *
#only need these if they differ from one source to another.
#ZFATerm = zfin_anatomy, zfin_expression, zfin_phenotypes, zfin_markers, *

#PATOTerm = zfin_pato, zfin_phenotypes, *

# Expression = zfin_expression, *

ExpressionResult = zfin_expression, *

# ExternalLink = zfin_markers, zfinOrthologues, zebrafishPanther, zfin_expression, *

# ExternalDatabase = zfin_markers, zfinOrthologues, zebrafishPanther, zfin_expression, *

Publication = zfin_pubs, zfin_markers, zfin_genofeats, zfin_features, zfinOrthologues, zebrafishPanther, go-annotation, *

Environment = zfinExperiments, zfin_genoenvs, zfin_phenotypes, zfin_expression, *

EnvironmentalCondition = zfinExperiments, zfin_genoenvs, zfin_phenotypes, zfin_expression, *
