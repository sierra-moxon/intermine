<!--
  Expects these properties to be defined in project.properties when calling build-db:

  core.model.path   - project of core.xml model file (name of a directory in relative to the root)
-->

<project name="objectstore" default="default" basedir="."
    xmlns:os="http://www.intermine.org/ns/im-os-proj/1"
    xmlns:task="http://www.intermine.org/ns/im-task-proj/1">

  <dirname property="objectstore.xml.basedir" file="${ant.file.objectstore}"/>

  <import file="${objectstore.xml.basedir}/model.xml"/>
  <import file="${objectstore.xml.basedir}/task.xml"/>

  <!-- Our generate phase involves fetching the model from the database. -->
  <property name="generating.code" value="true"/>

  <target name="-define-task-classpath">
    <path id="task.class.path">
      <!-- prepend directory containing fetched model -->
      <pathelement location="${build.model.dir}"/>
      <pathelement location="${build.task.dir}"/>
      <path refid="project.execute.path"/>
      <pathelement location="${build.dir}/classes"/>
    </path>
  </target>

  <!-- INIT TASKS -->

  <target name="-pre-init" depends="model.-pre-init">
    <mkdir dir="${build.classes.dir}"/>
    <property name="build.model.dir" location="${build.dir}/model"/>
  </target>

  <!-- BUILD DB -->

  <target name="-init-build-db" depends="-init-properties, init, -init-deps, -init-task-xml">
    <property name="doing.build.db" value="true"/>
  </target>

  <target name="-pre-build-db"/>

  <target name="-post-build-db"/>

  <target name="-do-build-db">
    <task:build-db osname="${objectstore.name}" model="${model.name}"/>
    <create-indexes alias="${objectstore.name}" />
    <analyse-db osName="${objectstore.name}"/>
  </target>

  <target name="build-db" depends="-init-build-db,
                                   -define-macrodef-merge-additions,
                                   -init-merge,
                                   -merge-models,
                                   -merge-shortcuts,
                                   compile,
                                   -pre-build-db,
                                   -do-build-db,
                                   -post-build-db"/>


  <!-- ANALYSE DB PRODUCTION SHORTCUT -->

  <target name="analyse-db-production" depends="-init-properties, init, -init-deps, -init-task-xml">
    <analyse-db osName="os.production"/>
  </target>
    
  <!-- CREATE INDEXES ON ALL NON-PRIMARY KEY ATTRIBUTES -->

  <target name="create-indexes-attribute" depends="-init-build-db">
    <create-indexes alias="${objectstore.name}" attributeIndexes="true"/>
  </target>

  <!-- GENERATE (FETCH) -->

  <target name="-init-generate" depends="model.-init-generate">
    <!-- We actually get the model xml quite late (from the database) so we set this now -->
    <condition property="have.xml">
      <and><istrue value="true"/></and>
    </condition>
  </target>

  <target name="-pre-generate" 
          depends="-init-properties, init, -init-deps, -init-task-xml" unless="doing.build.db">
    <!-- Retrieve model from database -->
    <retrieve-metadata osName="${objectstore.name}" destDir="${build.model.dir}"/>
    <!-- Copy retrieved files so that model generation and packaging tasks will find them -->
    <copy file="${build.model.dir}/${model.name}_model.xml"
          todir="${build.classes.dir}"/>
    <copy file="${build.model.dir}/${model.name}_keyDefs.properties"
          todir="${build.classes.dir}"/>
    <copy file="${build.model.dir}/class_keys.properties"
          todir="${build.classes.dir}"/>
    <property name="regenerate.java" value="true"/>
  </target>

  <target name="-init-summarise-objectstore" 
          depends="init, -init-deps, -init-task-xml, -init-jar, -init-properties"/>

  <target name="summarise-objectstore" depends="-init-summarise-objectstore"
          unless="doing.build.db">
    <!-- Summarise objectstore -->
    <echo message="Summarising object store ${objectstore.name}..."/>
    <summarise-objectstore alias="${objectstore.name}"
                           outputFile="${dist.dir}/objectstoresummary.properties"
                           inputFile="objectstoresummary.config.properties"/>
  </target>

  <!--
    Merge models before generating model java code if merging is needed
  -->
  <target name="-init-merge" if="core.model.path">
    <fileset dir="${build.dir}/model" includes="*"/>
    <!-- Copy the core model to the build directory -->
    <copy file="${objectstore.xml.basedir}/../${core.model.path}/core.xml"
          tofile="${build.model.dir}/${model.name}_model.xml"/>
  </target>

  <!-- Override to perform merge. Note: keep the 'if' -->
  <target name="-merge-models" if="core.model.path"/>

  <!-- Merge shortcuts of the core model -->
  <target name="-merge-shortcuts" depends="-load-task-taskdefs" if="core.model.path">
    <echo>Merging shortcuts...</echo>
    <model-merger inputModelFile="${build.model.dir}/${model.name}_model.xml"
                  additionsFile="${objectstore.xml.basedir}/../${core.model.path}/shortcuts.xml"
                  outputFile="${build.model.dir}/${model.name}_model.xml"/>
  </target>

  <target name="-define-macrodef-merge-additions" depends="-load-task-taskdefs">
    <macrodef name="merge-additions">
      <attribute name="file"/>
      <sequential>
        <echo>Merging @{file}...</echo>
        <model-merger inputModelFile="${build.model.dir}/${model.name}_model.xml"
                      additionsFile="${objectstore.xml.basedir}/../@{file}"
                      outputFile="${build.model.dir}/${model.name}_model.xml"/>
      </sequential>
    </macrodef>
  </target>

  <target name="merge-models-manually"
          depends="-init-build-db,
                   -define-macrodef-merge-additions,
                   -init-merge,
                   -merge-models,
                   -merge-shortcuts"/>

  <!-- exist so that default can be overridden -->
  <target name="default" depends="model.default"/>

</project>
