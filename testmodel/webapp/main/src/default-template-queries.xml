<userprofile>
  <items/>
  <bags/>
  <queries>
  </queries>

  <template-queries>
    <template name="employeeByName" description="View all the employees with certain name" important="false">
      <query name="employeeByName" model="testmodel" view="Employee.name Employee.age">
        <node path="Employee" type="Employee">
        </node>
        <node path="Employee.name" type="String">
          <constraint op="=" value="" description="" identifier="Employee.name" editable="true" code="A">
          </constraint>
        </node>
      </query>
    </template>

    <template name="employeesFromCompanyAndDepartment" description="View all the employees that work within a certain department of the specified company" important="false">
      <query name="employeesFromCompanyAndDepartment" model="testmodel" view="Employee.name Employee.age" constraintLogic="A and B">
        <node path="Employee" type="Employee">
        </node>
        <node path="Employee.department" type="Department">
        </node>
        <node path="Employee.department.company" type="Company">
        </node>
        <node path="Employee.department.company.name" type="String">
          <constraint op="=" value="CompanyA" description="" identifier="Company.name" editable="true" code="A">
          </constraint>
        </node>
        <node path="Employee.department.name" type="String">
          <constraint op="LIKE" value="Department%" description="" identifier="Department.name" editable="true" code="B">
          </constraint>
        </node>
      </query>
    </template>

    <template name="employeesOfACertainAge" description="View all the employees of a certain age" important="false">
      <query name="employeesOfACertainAge" model="testmodel" view="Employee.name Employee.age" constraintLogic="A and B">
        <node path="Employee" type="Employee">
        </node>
        <node path="Employee.age" type="int">
          <constraint op="&gt;" value="35" description="First age constraint" identifier="Employee.age.LESS_THAN.1" editable="true" code="A">
          </constraint>
          <constraint op="!=" value="55" description="Second age constraint" identifier="Employee.age.NOT_EQUALS.1" editable="true" code="B">
          </constraint>
        </node>
      </query>
    </template>
<template name="employeesOverACertainAgeFromDepartmentA" title="View all the employees of a certain age from a certain department" longDescription="" comment="" important="false">
  <query name="employeesOverACertainAgeFromDepartmentA" model="testmodel" view="Employee.name Employee.age Employee.department.name" constraintLogic="A and B">
    <node path="Employee" type="Employee">
    </node>
    <node path="Employee.age" type="int">
      <constraint op="&gt;=" value="25" description="Age constraint" identifier="Employee.age.NOT_EQUALS.1" editable="true" code="A">
      </constraint>
    </node>
    <node path="Employee.department" type="Department">
    </node>
    <node path="Employee.department.name" type="String">
      <constraint op="=" value="DepartmentA" description="Department constraint" identifier="" editable="true" code="B">
      </constraint>
    </node>
  </query>
</template>
<template name="convertEmployeesToAddresses" title="Convert employees to addresses" longDescription="" comment="" important="false">
  <query name="convertEmployeesToAddresses" model="testmodel" view="Employee.id Employee.address.id">
    <node path="Employee" type="Employee"/>
    <node path="Employee.id" type="Integer">
      <constraint op="=" value="0" description="id" identifier="" editable="true" code="A"/>
    </node>
    <node path="Employee.address.id" type="Integer"/>
  </query>
</template>
<template name="convertEmployeeToManager" title="Convert Employees to Managers" longDescription="" comment="" important="false">
  <query name="convertEmployeeToManager" model="testmodel" view="Employee.id Employee.department.manager.id">
    <node path="Employee" type="Employee">
    </node>
    <node path="Employee.id" type="Integer">
      <constraint op="=" value="0" description="id" identifier="" editable="true" code="A">
      </constraint>
    </node>
  </query>
</template>
  </template-queries>

  <tags>
    <tag name="aspect:People" objectIdentifier="org.intermine.model.testmodel.Employee" type="class">
    </tag>
    <tag name="aspect:People" objectIdentifier="org.intermine.model.testmodel.Manager" type="class">
    </tag>
    <tag name="aspect:People" objectIdentifier="org.intermine.model.testmodel.CEO" type="class">
    </tag>
    <tag name="aspect:People" objectIdentifier="org.intermine.model.testmodel.Contractor" type="class">
    </tag>
    <tag name="aspect:People" objectIdentifier="org.intermine.model.testmodel.Secretary" type="class">
    </tag>
    <tag name="aspect:Entities" objectIdentifier="org.intermine.model.testmodel.Bank" type="class">
    </tag>
    <tag name="aspect:Entities" objectIdentifier="org.intermine.model.testmodel.Department" type="class">
    </tag>
    <tag name="aspect:Entities" objectIdentifier="org.intermine.model.testmodel.Address" type="class">
    </tag>
    <tag name="aspect:People" objectIdentifier="employeesFromCompanyAndDepartment" type="template">
    </tag>
    <tag name="aspect:People" objectIdentifier="employeesOverACertainAgeFromDepartmentA" type="template">
    </tag>
    <tag name="aspect:People" objectIdentifier="employeeByName" type="template">
    </tag>
    <tag name="aspect:People" objectIdentifier="employeesOfACertainAge" type="template">
    </tag>
    <tag name="converter" objectIdentifier="convertEmployeesToAddresses" type="template">
    </tag>
  </tags>
</userprofile>
