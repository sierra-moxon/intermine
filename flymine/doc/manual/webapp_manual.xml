<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE set PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
          "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">


<set>
  <title>FlyMine User Documentation</title>
  
  <book id="quickStartGuide">
    <title>Quick Start Guide</title>
    
    <bookinfo>
      <productname>
        <emphasis>FlyMine</emphasis> - An integrated database for Drosophila
        and Anopheles genomics 
      </productname>
      <pubdate>10 January 2005</pubdate>
      <copyright>
        <year>2002,2003,2004,2005</year>
        <holder>FlyMine</holder>
      </copyright>
      <legalnotice>
        <para>
          Permission is granted to copy, distribute and/or modify this document
          under the terms of the GNU Free Documentation License, Version 1.2 or
          any later version published by the Free Software Foundation; with no
          Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A
          copy of the license is included in <xref linkend="docLicence"/>.
        </para>
        <para>
          The FlyMine source code is license under the GNU Lesser General
          Public License.  For the full text see <xref
          linkend="sourceLicence"/>.
        </para>
      </legalnotice>
      <abstract>
        <para>
          This document describes release 3.0 of the FlyMine Drosophila and
          Anopheles integrated genomics database.
        </para>
      </abstract>
    </bookinfo>

  <chapter>
    <title>Introduction</title>
       <sect1>
	 <title>Three ways to query data in FlyMine</title>
   
      <para>
        FlyMine provides three web-based ways to query the integrated data: A
        query Builder, predefined template queries and a quick
        search.
      </para> 

      <orderedlist numeration="upperalpha">
        <listitem>
          <para>
           The Query Builder: allows you to build your own queries and
           is the most advanced way to access the data. It  requires some
           investment in time to learn how to use.
          </para>
        </listitem>

        <listitem>
          <para>
        Predefined template queries: provide quick and easy access to
        the data.  A template query basically consists of a form, in
        which you fill in the boxes to define your query.  Template
        queries range from fairly simple queries to complex queries
        covering two or more datasets.
          </para>
        </listitem>

        <listitem>
          <para>
        The quick search: allows you to browse the database,
        starting from a particular name or identifier.  This is very
        useful if you do not have a particular query you want to run
        and want to browse all the information or specific information
        about a particular entry in the database.
          </para>
        </listitem>
      </orderedlist>
    
      <para>
        These query methods are described in more detail in the
        following chapters.
      </para>
    </sect1>

      <sect1>
         <title>Accessing the query methods</title> 

	<para>The FlyMine main query page provides three main routes
            to access the different query methods.  To go to the main
            query page click on 'Start a query' from the FlyMine home
            page.
        </para>


      <mediaobject>
        <imageobject>
          <imagedata fileref="homePage1.png" />
        </imageobject>
        <textobject>
            <phrase>Home page</phrase>
        </textobject>
      </mediaobject>
    </sect1>
 

    <sect1 id ="mainQueryPage">
       <title>The main query page</title>
 
        <para>The main query page has three sections:
        </para>

      <orderedlist numeration="upperalpha">
        <listitem>
          <para>
          Aspects: provide 'views' of the different types of data
          available. Each aspect provides details about data available
          for the particular data type, access to the query builder
          from starting points relevant to that data type and a list
          of related template queries. See <xref linkend="Aspects"/>
          </para>
        </listitem>

        <listitem>
          <para>
        Quick Search: simple access that allows browsing of the data
        available. See <xref linkend="manualQuickStartBrowsing"/>
          </para>
        </listitem>

        <listitem>
          <para>
        Search templates: allows searching of all the template queries
        available via key words. See <xref linkend="manualQuickStartTemplates"/>
          </para>
        </listitem>
      </orderedlist>

      <mediaobject>
        <imageobject>
          <imagedata fileref="mainQueryPage1.png" />
        </imageobject>
        <textobject>
            <phrase>Main Query Page</phrase>
        </textobject>
      </mediaobject>


       <para> Each of these is described in more detail in the next
            chapters.
       </para>

      </sect1>
   
</chapter>

   <chapter id="Aspects">
      <title>Aspects</title> 

      <sect1>
       <title>Introduction</title>
      
      <para>FlyMine presents data as 'aspects', with each aspect
       providing a 'view' of a particular type of data (for example
       Gene Expression or Protein Interactions) and how this can be
       linked with other types of data.  The main query page
       shows all the aspects that are available:
      </para>


      <mediaobject>
        <imageobject>
          <imagedata fileref="aspects1.png" />
        </imageobject>
        <textobject>
            <phrase>Aspects</phrase>
        </textobject>
      </mediaobject>
     </sect1>

      <sect1>
       <title>Aspect Details</title>

      <para>Each aspect provides a summary of the data available,
      quick links to browse or export that data, starting-points for
      building a query using the query builder and a set of template
      queries.  The screenshot below shows the protein-interaction aspect:
      </para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="proteinInteractionAspects1.png" />
        </imageobject>
        <textobject>
            <phrase>Aspects</phrase>
        </textobject>
      </mediaobject>

     </sect1>

   </chapter>




    <chapter id="manualQuickStartBrowsing">
      <title>Quick Search</title>

      <sect1>
          <title>Introduction</title>

      <para>
        The FlyMine Quick Search allows you to quickly and directly
        access the data in FlyMine. Entering any object identifier
        (such as a gene name or identifier) will take you straight to
        the details page for that object.  Wildcards (*) can be
        attached to any text entered to increase the scope of your
        search.  (A wild card added to the end of the text will search
        for anything beginning with that text (eg zen* will search zen
        and anything that begins with zen - and so your query could
        return several results such as zen, zen2 and zen-4).  A *
        added to the beginning of your text will search for anything
        that ends in that text (eg *_DROME will search for all entries
        ending in _DROME - ie all the Drosophila entries in
        Uniprot)). The Quick Search is case-insensitive.
      </para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="browsing1.png" />
        </imageobject>
        <textobject>
            <phrase>Browsing</phrase>
        </textobject>
      </mediaobject>

     </sect1>
	
     <sect1>
	  <title>Quick Search Results</title>


      <para>The quick search will return either a single object, in
      which case the object details page for that result will be
      displayed, or several objects that match your query, in which
      case a list of objects will be displayed with a link to the
      object details page for each. (See <xref
      linkend="manualResults"/> in the FlyMine manual for a more
      detailed explanation of FlyMine results pages).
      </para>

       <mediaobject>
        <imageobject>
          <imagedata fileref="browsing2.png" />
        </imageobject>
        <textobject>
            <phrase>Browsing</phrase>
        </textobject>
      </mediaobject>

     </sect1>


    </chapter>


    <chapter id="manualQuickStartTemplates">
      <title>Template Queries : Predefined Queries</title>

     <sect1 id="accessingTemplates">
	<title>Accessing template queries</title>

     <para>
        Template queries provide a quick and easy route to accessing
        the data in FlyMine. A template query provides a form with
        various boxes for you to fill in.  A number of template
        queries have been predefined.  These range from simple queries
        to more complex queries covering a wide range of data. More
        template queries will be added as FlyMine develops and we
        welcome suggestions. Template queries can be accessed in two
        ways - via the 'aspects' pages (see <xref linkend="Aspects"/>)
        or via the 'Search templates' option.  To get an idea of the templates
        available it is recommended that new users browse the
        available templates under each aspect.
      </para>

      <sect2>
	  <title>Accessing templates from 'Aspects' pages.</title>
 
           <para>Each aspect has a list of template queries that
            involve that particular data type.  The template queries
            range from fairly simple queries involving just that data
            type to more complex queries that involve data sets from
            other aspects as well.</para>

       <mediaobject>
        <imageobject>
          <imagedata fileref="aspectsTemplates1.png" />
        </imageobject>
        <textobject>
            <phrase>Templates</phrase>
        </textobject>
      </mediaobject>


      </sect2> 

      <sect2>
	  <title>Searching templates</title> 

          <para>The search templates option is available from the main
	  query page (see <xref linkend="mainQueryPage"/>) and from
	  the main menu bar at the top of each FlyMine page. To find
	  template queries relating to a certain type of data enter a
	  keyword into the search box.  Leave the selection box set to
	  the default (public templates) unless you have created
	  templates of your own (see <xref
	  linkend="manualCreatingTemplates"/>).
          </para>
          
          <para>The search will return all templates which relate to
          your keyword(s), graded acording to their similarity to the
          keyword(s).  The following screenshot shows the result of
          searching the templates for the keyword 'GO terms'.
          </para>


       <mediaobject>
        <imageobject>
          <imagedata fileref="searchTemplates1.png" />
        </imageobject>
        <textobject>
            <phrase>Templates</phrase>
        </textobject>
      </mediaobject>



        
  
      </sect2>

    </sect1>

      <sect1>
	  <title>Running template queries</title>

      <para>To run a template query:
      </para>

      <orderedlist>
        <listitem>
          <para>
            Select the query you wish to run either from the lists on
            one of the 'aspects' pages or by using the 'Search
            Templates' option (see <xref
            linkend="accessingTemplates"/>). Pressing the -&gt; next
            to the query description will take you to the template
            form.
          </para>

          <mediaobject>
            <imageobject>
              <imagedata fileref="templates1.png" />
            </imageobject>
            <textobject>
                <phrase>Templates</phrase>
            </textobject>
          </mediaobject>

        </listitem>

        <listitem>
          <para>
            Fill in the boxes with the appropriate values or
            leave them with the default values shown (see screenshot
            below).
          </para>
        </listitem>

        <listitem>
          <para>
            Pressing the 'View results' button will take you directly
            to the results for your query. Pressing the 'View query'
            button will display the template query in the FlyMine
            Query Builder (see <xref linkend="manualQueryBuilder"/>).
            Here you can either use the template as a starting point
            for building a more complex query, edit the query or
            simply run the query as it is - press 'Show results' to
            run your query.
          </para>

          <mediaobject>
            <imageobject>
              <imagedata fileref="templates2.png" />
            </imageobject>
            <textobject>
                <phrase>Templates #2</phrase>
            </textobject>
          </mediaobject>

        </listitem>
      </orderedlist>
 </sect1>    


  </chapter>




    <chapter id="manualQuickstartBuilder">
      <title>The FlyMine Query Builder : Building Complex Queries</title>

      <sect1>
	  <title>Introduction</title>

      <para>
           Different types of data in FlyMine are described by
           classes. For example, information describing genes is
           'held' in the 'Gene' class. A class contains fields to hold
           specific information about the type of item it is
           describing. For example, the Gene class includes the fields
           'name' and 'identifier'. Each item within a class is called
           an object. For example the 'Notch' gene is an object that
           belongs to the Gene class. The different classes that
           describe the data in FlyMine are linked together (through
           references). For example, the Gene class is linked to the
           Transcript class and other relevent classes. The classes
           and the way in which they are all linked together is called
           the FlyMine data model. (see <xref linkend="manualCOF"/>
           and <xref linkend="manualFields"/> for a more detailed
           explanation of these concepts).
       </para>

       <para>
        The FlyMine query builder allows you to construct complex
        queries across the multiple integrated data sources in the
        database. The query-builder interface enables you to browse
        through classes and fields of the data model, selecting
        those that you wish to constrain and those that you wish to
        include in your results.
       </para>


      <para>
        The following list provides a basic overview of the steps
        involved in building a FlyMine query. For a walk-through a
        simple query see the <ulink
        url="../tutorials/index.xml">tutorials</ulink>.
      </para>
  
    <orderedlist>
      <listitem>
        <para>
          STARTING POINT: Choose the starting point for your query
          either from the classes displayed (which have been divided
          into biologically meaniful categories) or by selecting the
          'List all classes' link.  This will take you to the <xref
          linkend="manualQuerybuilder"/>.
        </para>
      </listitem>

      <listitem>
        <para>
          BROWSE: In the model browser of the query builder, browse to
          the classes and fields you are interested in. See <xref
          linkend="manualModelbrowser"/> for more details.
        </para>
      </listitem>

      <listitem>
        <para>
          CONSTRAIN: Select the classes and/or fields you wish to
          constrain using the "constrain" buttons. Specify your
          constraints in the right hand constraints list.  See <xref
          linkend="manualConstraintslist"/> for more details.
        </para>
      </listitem>

      <listitem>
        <para>
          SHOW: Select the classes and/or fields you wish to show in
          the results output using the "show" buttons. The
          classes/fields selected will appear in the output fields
          list. See <xref linkend="manualOutputfields"/> for more
          details.
        </para>
      </listitem>

      <listitem>
        <para>
          VIEW: Press 'show results' to view your results in the
          results page.  See <xref linkend="manualShowresults"/> for
          more details.
        </para>
      </listitem>
    </orderedlist>
   </sect1>


    <sect1>
      <title>Selecting a starting point for your query</title>

      <para>To use the query builder you have to first select a
      starting point.  The starting point can be any FlyMine class (eg
      Gene, Transcript, Protein etc).  Each 'aspect' has a set of
      commonly used starting points relating to that type of
      data (see <xref linkend="Aspects"/>). Clicking on a class will take you to the query builder
      (see <xref linkend="manualQuerybuilder"/>).
      </para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="startingPoints1.png" />
        </imageobject>
        <textobject>
            <phrase>class Selection</phrase>
        </textobject>
      </mediaobject>

      <para>
        In addition to the commonly used classes, a full list of
        classes from which you can start your query can be accessed by
        clicking on the 'List all classes' link on the main query
        page. This takes you to the class chooser page (see screenshot
        below). This page contains a list of classes for which objects
        exist in the database (i.e. classes for which there is data
        associated).
      </para>

      <para>
        Selecting the class from which you wish to start your query
        and pressing the 'Select' button will take you to the query
        builder (see <xref linkend="manualQuerybuilder"/>).
      </para>


      <mediaobject>
        <imageobject>
          <imagedata fileref="classSelectionAll2.png" />
        </imageobject>
        <textobject>
            <phrase>Class Selection All</phrase>
        </textobject>
      </mediaobject>


      <mediaobject>
        <imageobject>
          <imagedata fileref="classSelectionAll1.png" />
        </imageobject>
        <textobject>
            <phrase>Class Selection All</phrase>
        </textobject>
      </mediaobject>


      <para>
        The browse model button (again accessed from the main query
        page- see screenshot above) allows you to browse the complete
        FlyMine data model. This shows all the classes in FlyMine,
        some of which do not yet have data associated with them.
      </para>

      <para>
        In browse mode, the number on the right shows the number of
        objects associated with that class.
      </para>

      <para>
        Clicking on a class name within the browser will take you to
        the query builder (see <xref linkend="manualQuerybuilder"/>).
      </para>

     <mediaobject>
        <imageobject>
          <imagedata fileref="browsingModel1.png" />
        </imageobject>
        <textobject>
            <phrase>Browsing Model</phrase>
        </textobject>
      </mediaobject>
 
    </sect1>

    <sect1>
      <title>The main query builder page</title>
      <para>
        The main FlyMine query builder page is composed
        of 3 sections (shown in the screen shot below):
      </para>

      <orderedlist>
        <listitem>
          <para>
            a model browser (left)
          </para>
        </listitem>

        <listitem>
          <para>
            a constraints list (right)
          </para>
        </listitem>

        <listitem>
          <para>
            a 'Fields selected for output' list (bottom)
          </para>
        </listitem>
      </orderedlist>

      <mediaobject>
        <imageobject>
          <imagedata fileref="queryBuilder1.png" />
        </imageobject>
        <textobject>
            <phrase>Query Builder</phrase>
        </textobject>
      </mediaobject>

      <sect2>
        <title>
          The model browser
        </title>



        <para>
          The model browser allows you to browse through the FlyMine
          data model, selecting the classes that contain the objects
          you require. Depending on the starting class you will be
          able to navigate to other classes as defined by the
          references between the classes. In other words, to combine
          classes containing the objects you require, you find a path
          through the classes that link together the information you
          require. Within the model browser classes that can be
          accessed from a parent class (ie are linked to the parent
          class through a reference) are shown as fields within that
          class.
        </para>

        <para>
          For each class and field within the model browser there
          is a 'show' and a 'constrain' option. These are used
          to either select a field to show in the results output or to
          constrain in the constraints list.
        </para>

        <para>
          See <xref linkend="manualModelbrowser"/>
          for more information about classes and
          fields.
        </para>

        <mediaobject>
          <imageobject>
            <imagedata fileref="modelBrowser1.png" />
          </imageobject>
          <textobject>
              <phrase>Model Browser</phrase>
          </textobject>
        </mediaobject>
      </sect2>

      <sect2>
        <title>
          The constraints list
        </title>

        <para>
          The constraints list is on the right hand side of the query
          builder page. In this section you specify the constraints
          you wish to apply to particular classes and fields. A
          constraint is like a filter - you filer out a subset of the
          objects in a class which have certain characteristics (defined
          by the constraint).
        </para>

        <para>
          To apply a constraint to a field, navigate to the field in
          the model browser and click on the "constrain" button next
          to it. This will add the field to the constraints list and
          bring up a box in which you specify your constraint.
        </para>

        <para>
          The type of constraint you can add will vary depending
          on the type of field you selected to constrain.
        </para>

        <mediaobject>
          <imageobject>
              <imagedata fileref="constraining1.png" />
          </imageobject>
          <textobject>
              <phrase>Constraining</phrase>
            </textobject>
        </mediaobject>
      </sect2>

      <sect2>
        <title>
          The output fields list
        </title>

        <para>
          The output fields list is located at the bottom of the
          query builder (underneath the Model browser). Initially the
          output fields list will say 'No fields selected for
          output'.
        </para>

        <para>
          The output fields list shows all fields or classes that you
          have selected to show in the results output. To select a
          field or class to show in the results output you press
          'show' next to the field or class. You can select any field
          or class to show in your results (regardless of fields or
          classes you have constrained). 
        </para>

	<para>There is a 'show' button next to every class field (eg
	next to the Gene name field) and next to each class itself (eg
	next to the Gene class - above the fields). Selecting 'show'
	next to a class will return all the information available for
	each object in that class (or subset of objects if a
	constraint has been applied). This option is useful if you
	wish to browse the information associated with certain
	objects. See <xref linkend="manualResults"/> for more details
	on how this information can be viewed. Selecting 'show' next
	to a class field (eg Gene name) will return just the text
	information stored in that field.  This type of result is most
	suitable if you wish to export information (see <xref
	linkend="manualResults"/> and <xref
	linkend="manualExportingData"/> for more details.
        </para>

        <para>
          The order of fields and classes in the output fields
          list can be changed using the &lt; and &gt; arrows. Fields can
          be deleted from the output fields list using the x.
        </para>

        <mediaobject>
          <imageobject>
            <imagedata fileref="showFields1.png" />
          </imageobject>
          <textobject>
              <phrase>Show Fields</phrase>
            </textobject>
        </mediaobject>
      </sect2>
  </sect1>

  </chapter>

    <chapter>
      <title>The Results page</title>

      <sect1>
          <title>Introduction</title>
      <para>
        The results page displays the first 10 objects
        returned by your query.
      </para>

      <para>
        The number of objects displayed can be changed by
        changing the number in the Page size box and pressing
        Change.
      </para>

      <para>
        You can scroll through the objects using Next, or go
        to the last 10 objects using Last.
      </para>

      <para>
        The total number of objects returned by your query
        is estimated. An estimate is given because, for large
        queries, only a subset of the total number of objects is
        initially returned by the query. This is to improve query
        run time for large queries.  Click on last if you want to
        know the actual number of rows returned by your
        query.
      </para>

      <para>
        From the results page you can save your data to a
        bag (see <xref linkend="manualSavingBags"/>)
        and export your data in various formats (see
        <xref linkend="manualExportingData"/>).
      </para>

      <para>
        If you selected any classes to 'show' in your results (as
        opposed to class fields), then all the information for each
        object (or subset of objects) from that class will be returned
        by the query. In these cases a summary of each object will be
        displayed in the results page, with a link to a 'details' page
        that allows you to view all the information available for that
        object (including links to objects in classes referenced from
        that class).  See next section (<xref linkend="resultTypes"/>) for more details.
      </para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="results1.png" />
        </imageobject>
        <textobject>
            <phrase>Results</phrase>
        </textobject>
      </mediaobject>
  
      </sect1>

      <sect1 id="resultTypes">
        <title>
          Exportable or Browsable results
        </title>

        <para>
          Depending on what you select to show in your results output,
          you can create tables of simple attributes (suitable for
          exporting) or tables of object summaries (suitable for
          browsing), or a combination of both. If you look at the
          model browser you will notice that there are 'show' options
          next to the fields of classes and next to the actual class
          names (see screenshot below).
        </para>

        <mediaobject>
          <imageobject>
            <imagedata fileref="modelBrowserBrowsing1.png" />
          </imageobject>
          <textobject>
              <phrase>Model Browser Browsing</phrase>
          </textobject>
        </mediaobject>

        <para>
          Selecting 'show' next to class fields results in a table of
          simple attributes as shown in the results displayed in the
          screenshot below.
        </para>


        <mediaobject>
          <imageobject>
            <imagedata fileref="tableResults3.png" />
          </imageobject>
          <textobject>
              <phrase>Model Browser Browsing</phrase>
          </textobject>
        </mediaobject>

 
        <para>
          Selecting 'show' next to a class name means that each object
          required from that class will be returned (i.e all its
          fields and the references to other classes). It is also
          possible to show a mix of fields and objects in the result
          display, ie it is possible to select 'show' next to both
          class fields and classes in the same query.
        </para>

        <para>
          When objects are selected, the result display will
          initially show a summary for each object. However, for
          each object in the database there is also a detailed
          results view (accessed by a link from the summary view)
          which shows all the fields of the object and the
          classes referenced by that object.  From this detailed
          results view it is possible to browse the information
          contained in the referenced classes (see screenshot below).
        </para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="resultsDetails1.png" />
        </imageobject>
        <textobject>
            <phrase>Results Details</phrase>
        </textobject>
      </mediaobject>
      </sect1>

  </chapter>
</book>






<book id="flymineManual">
  <title>
    FlyMine Manual
  </title>

  <bookinfo>
    <productname>
      <emphasis>FlyMine</emphasis> - An integrated database for Drosophila and
      Anopheles genomics 
    </productname>
    <pubdate>10 January 2005</pubdate>
    <copyright>
      <year>2002,2003,2004,2005</year>
      <holder>FlyMine</holder>
    </copyright>
    <legalnotice>
      <para>
        Permission is granted to copy, distribute and/or modify this document
        under the terms of the GNU Free Documentation License, Version 1.2 or
        any later version published by the Free Software Foundation; with no
        Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A
        copy of the license is included in <xref linkend="docLicence"/>.
      </para>
      <para>
        The FlyMine source code is license under the GNU Lesser General Public
        License.  For the full text see <xref linkend="sourceLicence"/>.
      </para>
    </legalnotice>
    <abstract>
      <para>
        This document describes release 2.1 of the FlyMine Drosophila and Anopheles
        integrated genomics database.
      </para>
    </abstract>
  </bookinfo>

  <chapter>
    <title>The FlyMine Project</title>

    <itemizedlist>
      <listitem>
        <para>
          <!-- <ulink url="../../introduction.xml">The FlyMine project</ulink> -->
          <ulink url="http://www.flymine.org/introduction.html">The FlyMine project</ulink>
        </para>
      </listitem>
    </itemizedlist>
  </chapter>

  <chapter id="manualIntroduction">
      <title>Introduction - ways to query FlyMine</title>

      <para>
        FlyMine provides three web-based ways to query the integrated data: A
        query Builder, predefined template queries and a quick
        search.
      </para> 

      <orderedlist numeration="upperalpha">
        <listitem>
          <para>
           The Query Builder: allows you to build your own queries and
           is the most advanced way to access the data. It  requires some
           investment in time to learn how to use.
          </para>
        </listitem>

        <listitem>
          <para>
        Predefined template queries: provide quick and easy access to
        the data.  A template query basically consists of a form, in
        which you fill in the boxes to define your query.  Template
        queries range from fairly simple queries to complex queries
        covering two or more datasets.
          </para>
        </listitem>

        <listitem>
          <para>
        The quick search: allows you to browse the database,
        starting from a particular name or identifier.  This is very
        useful if you do not have a particular query you want to run
        and want to browse all the information or specific information
        about a particular entry in the database.
          </para>
        </listitem>
      </orderedlist>
    
      <para>
        These query methods are described in more detail in the
        following chapters.
      </para>
  

      <sect1>
         <title>Accessing the query methods</title> 

	<para>The FlyMine main query page provides three main routes
            to access the different query methods.  To go to the main
            query page click on 'Start a query' from the FlyMine home
            page.
        </para>


      <mediaobject>
        <imageobject>
          <imagedata fileref="homePage1.png" />
        </imageobject>
        <textobject>
            <phrase>Home page</phrase>
        </textobject>
      </mediaobject>
    </sect1>
 

    <sect1 id ="manualMainQueryPage">
       <title>The main query page</title>
 
        <para>The main query page has three sections:
        </para>

      <orderedlist numeration="upperalpha">
        <listitem>
          <para>
          Aspects: provide 'views' of the different types of data
          available. Each aspect provides details about data available
          for the particular data type, access to the query builder
          from starting points relevant to that data type and a list
          of related template queries. See <xref linkend="manualAspects"/>
          </para>
        </listitem>

        <listitem>
          <para>
        Quick Search: simple access that allows browsing of the data
        available. See <xref linkend="manualQuickStartBrowsing"/>
          </para>
        </listitem>

        <listitem>
          <para>
        Search templates: allows searching of all the template queries
        available via key words. See <xref linkend="manualQuickStartTemplates"/>
          </para>
        </listitem>
      </orderedlist>

      <mediaobject>
        <imageobject>
          <imagedata fileref="mainQueryPage1.png" />
        </imageobject>
        <textobject>
            <phrase>Main Query Page</phrase>
        </textobject>
      </mediaobject>


       <para> Each of these is described in more detail in the next
            chapters.
       </para>

      </sect1>
   
</chapter>

   <chapter id="manualAspects">
      <title>Aspects</title> 

      <sect1>
       <title>Introduction</title>
      
      <para>FlyMine presents data as 'aspects', with each aspect
       providing a 'view' of a particular type of data (for example
       Gene Expression or Protein Interactions) and how this can be
       linked with other types of data.  The main query page
       shows all the aspects that are available:
      </para>


      <mediaobject>
        <imageobject>
          <imagedata fileref="aspects1.png" />
        </imageobject>
        <textobject>
            <phrase>Aspects</phrase>
        </textobject>
      </mediaobject>
     </sect1>

      <sect1>
       <title>Aspect Details</title>

      <para>Each aspect provides a summary of the data available,
      quick links to browse or export that data, starting-points for
      building a query using the query builder and a set of template
      queries.  The screenshot below shows the protein-interaction aspect:
      </para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="proteinInteractionAspects1.png" />
        </imageobject>
        <textobject>
            <phrase>Aspects</phrase>
        </textobject>
      </mediaobject>

     </sect1>

   </chapter>
      





  <chapter id="manualQueryBuilder">
    <title>The FlyMine Query Builder</title>
     <sect1>
         <title>Introduction</title>

	<para>Different types of data in FlyMine are described by
	classes.  For example, information describing genes is 'held'
	in the 'Gene' class.  A class contains fields to hold specific
	information about the type of item it is describing.  For
	example, the Gene class includes the fields 'name' and
	'identifier'. Each item within a class is called an
	object. For example the 'Notch' gene is an object that belongs
	to the Gene class.  The different classes that describe the
	data in FlyMine are linked together (through references).  For
	example, the Gene class is linked to the Transcript class and
	other relevent classes. The classes and the way in which they
	are all linked together is called the FlyMine data model. (see
	<xref linkend="manualCOF"/> and <xref linkend="manualFields"/>
	for an explanation of these concepts)
       </para>


    <para>
      The FlyMine query builder allows you to construct queries on the
      data in the FlyMine database.  The query-builder interface
      enables you to browse through classes and fields of the data
      model, selecting those that you wish to constrain and those that
      you wish to include in your results. The following points provide
      a basic outline of the steps involved in building a query with
      links to where you can find more detailed information:
    </para>
  
    <orderedlist>
      <listitem>
        <para>
          STARTING POINT: Choose the starting point for your query
          either from the classes displayed (which have been divided
          into biologically meaniful categories) or by selecting the
          'List all classes' link.  This will take you to the main
          query builder page. See <xref linkend="manualClasschooser"/>
          for more details.
        </para>
      </listitem>

      <listitem>
        <para>
          BROWSE: In the model browser of the query builder, browse to
          the classes and fields you are interested in. See
          <xref linkend="manualModelbrowser"/>
          for more details.
        </para>
      </listitem>

      <listitem>
        <para>
          CONSTRAIN: Select the classes and/or fields you wish to
          constrain using the -&gt; constrain arrows. Specify your
          constraints in the right hand constraints list.  See <xref
          linkend="manualConstraintslist"/> for more details.
        </para>
      </listitem>

      <listitem>
        <para>
          SHOW: Select the classes and/or fields you wish to show in
          the results output using the "show" buttons. The
          classes/fields selected will appear in the output fields
          list. See <xref linkend="manualOutputfields"/> for more
          details.
        </para>
      </listitem>

      <listitem>
        <para>
          VIEW: Press 'show results' to view your results in the
          results page.  See <xref linkend="manualShowresults"/> for
          more details.
        </para>
      </listitem>
    </orderedlist>
   </sect1>


  <sect1 id="manualClasschooser">
      <title>Selecting a starting point for your query</title>

      <para>To use the query builder you have to first select a
      starting point.  The starting point can be any FlyMine class (eg
      Gene, Transcript, Protein etc).  Each 'aspect' has a set of
      commonly used starting points relating to that type of
      data (see <xref linkend="Aspects"/>). Clicking on a class will take you to the query builder
      (see <xref linkend="manualQuerybuilder"/>).
      </para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="startingPoints1.png" />
        </imageobject>
        <textobject>
            <phrase>class Selection</phrase>
        </textobject>
      </mediaobject>

      <para>
        In addition to the commonly used classes, a full list of
        classes from which you can start your query can be accessed by
        clicking on the 'List all classes' link on the main query
        page. This takes you to the class chooser page (see screenshot
        below). This page contains a list of classes for which objects
        exist in the database (i.e. classes for which there is data
        associated).
      </para>

      <para>
        Selecting the class from which you wish to start your query
        and pressing the 'Select' button will take you to the query
        builder (see <xref linkend="manualQuerybuilder"/>).
      </para>


      <mediaobject>
        <imageobject>
          <imagedata fileref="classSelectionAll2.png" />
        </imageobject>
        <textobject>
            <phrase>Class Selection All</phrase>
        </textobject>
      </mediaobject>


      <mediaobject>
        <imageobject>
          <imagedata fileref="classSelectionAll1.png" />
        </imageobject>
        <textobject>
            <phrase>Class Selection All</phrase>
        </textobject>
      </mediaobject>


      <para>
        The browse model button (again accessed from the main query
        page- see screenshot above) allows you to browse the complete
        FlyMine data model. This shows all the classes in FlyMine,
        some of which do not yet have data associated with them.
      </para>

      <para>
        In browse mode, the number on the right shows the number of
        objects associated with that class.
      </para>

      <para>
        Clicking on a class name within the browser will take you to
        the query builder (see <xref linkend="manualQuerybuilder"/>).
      </para>

     <mediaobject>
        <imageobject>
          <imagedata fileref="browsingModel1.png" />
        </imageobject>
        <textobject>
            <phrase>Browsing Model</phrase>
        </textobject>
      </mediaobject>
 
    </sect1>


  <sect1 id="manualQuerybuilder">
    <title>The query builder page</title>
    <para>
      The main FlyMine query builder page is composed of 3
      sections:
    </para>

    <itemizedlist>
      <listitem>
        <para>
          <link linkend="manualModelbrowser">a model browser (left)</link>
        </para>
      </listitem>

      <listitem>
        <para>
          <link linkend="manualConstraintslist">a constraints list (right)</link>
        </para>
      </listitem>

      <listitem>
        <para>
          <link linkend="manualOutputfields">an output fields list (bottom)</link>.
          The output fields list will initially say 'No fields
          selected for output'.
        </para>
      </listitem>
    </itemizedlist>

    <mediaobject>
      <imageobject>
        <imagedata fileref="queryBuilder1.png" />
      </imageobject><textobject><phrase> </phrase></textobject>
    </mediaobject>
   </sect1>

    <sect1 id="manualModelbrowser">
      <title>The model browser</title>

      <para>
        The model browser allows you to browse through the FlyMine
        data model, selecting the classes that contain the objects you
        require. Depending on the starting class you will be able to
        navigate to other classes as defined by the references between
        the classes (see <xref linkend="manualCOF"/> for an
        explanation of these concepts). In other words, to combine
        classes containing the objects you require, you find a path
        through the classes that link together the information you
        require. Within the model browser classes that can be accessed
        from a parent class (ie are linked to the parent class through
        a reference) are shown as fields within that class (see <xref
        linkend="manualFields"/> for more explanation on fields).
      </para>

      <para>
        For each class and field within the model browser there is
        a 'show' and a 'constrain'  option. These are used to
        either select a class/field to show in the results output
        (see <xref linkend="manualOutputfields"/>) or to constrain in
        the constraints list (see <xref
        linkend="manualConstraintslist"/>).
      </para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="modelBrowser1.png" />
        </imageobject><textobject><phrase> </phrase></textobject>
      </mediaobject>
    

    <sect2 id ="manualFields">
      <title>Fields</title>

      <para>
        The following is an explanation of the classes and fields
        displayed by the model browser. The Gene class is used as an
        example, but the information is easily transferable to other
        classes. The screen-shot below shows the model browser
        displaying the Gene class.
      </para>

      <para>
        The following are 'fields' of the Gene class: identifier, name
        and organismDbId. Class fields hold just one piece of
        information which can be either text or a number. The fields
        of a class are always displayed directly below the class name
        and can be distinguished from other fields (see below) as they
        do not a have a + for expanding before them.
      </para>

      <para>
        The field called Organism is a reference (ie a link) to the
        organism class. Fields which are references to other classes have a
        field name (in this case organism) followed by the name of the class
        it is referencing (in this case Organism).
      </para>

      <para>
        The field called Transcript is also a reference to a class - the
        Transcript class. This field, however, also has the type 'collection'.
        This is because a particular gene object in the Gene class will
        reference (link to) one or more transcript objects in the Transcripts
        class. The transcript collection is a list of references to these
        transcript objects.
      </para>

      <para>
        The other fields in the gene class are all of the type class
        collection as described above.
      </para>

      <para>
        An object is a specific member of a class and it's related
        information (eg the Notch gene is a member of the Gene
        class). Therefore if you select 'show' next to the Gene class,
        you are asking for objects of the Gene class which includes
        all the information stored about each object. For example, if
        you query for the Notch gene object, your results will include
        all the fields and referenced classes associated with the
        Notch gene.  If you select a fields of a class to 'show' (eg
        gene name), you are asking for only a specific piece of
        information stored with the objects of that class.
      </para>

      <para>
        For specific information about each class or fields click
        on the ? help link next to the class/field in the model
        browser.
      </para>



      <mediaobject>
        <imageobject>
          <imagedata fileref="fields1.png" />
        </imageobject><textobject><phrase> </phrase></textobject>
      </mediaobject>
    </sect2>
  </sect1>

    <sect1 id="manualConstraintslist">
      <title>Applying constraints to your query</title>

      <para>
        The constraints list is on the right hand side of the query
        builder page. In this section you specify the constraints you
        wish to apply to particular classes and fields.  A
        constraint is like a filter - you filer out a subset of the
        objects in a class which have certain characteristics (defined
        by the constraint).
      </para>

      <para>
        To apply a constraint to a field, navigate to the field in the
        model browser and click on the 'constrain' button next to
        it. This will add the field to the constraints list and bring
        up a box in which you specify your constraint.
      </para>

      <para>
        The type of constraint you can add will vary depending on the
        type of field you selected to constrain.
      </para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="constraining1.png" />
        </imageobject><textobject><phrase> </phrase></textobject>
      </mediaobject>
    </sect1>

    <sect1 id="manualOutputfields">
      <title>Selecting what to show in your results</title>

      <para>
        The output fields list is located at the bottom of the query
        builder (underneath the <link
        linkend="manualModelbrowser">Model browser</link>).  Initially
        the output fields list will say 'No fields selected for
        output'.
      </para>

      <para>
        The output fields list shows all fields that you have selected
        to show in your results. To select a field to show in the
        results output you press 'show' next to the field.
      </para>

      <para>
        The order of fields in the output fields list can be changed
        using the &lt; and &gt; arrows. Fields can be deleted from the
        output fields list using the x.
      </para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="showFields1.png" />
        </imageobject><textobject><phrase> </phrase></textobject>
      </mediaobject>
    </sect1>

    <sect1 id="manualShowresults">
      <title>Viewing results</title>

      <para>
        Pressing 'Show results' will run your query. When your query is
        run an estimate is first made of how long it will take to run the
        query and how many objects should be returned by the query. If your
        query is going to take a very long time to run, it will be stopped and
        a message will appear at the top of the screen.
      </para>

      <para>
        When your query has run, your results will be displayed on the
        <link linkend="manualResults">results page</link>.
      </para>
    </sect1>

    <sect1 id="manualSavingqueries">
      <title>Saving queries</title>

      <para>
        All queries that you run are saved to your
        <link linkend="manualHistory">query history</link>. Your query will be
        named query_x (where x increments for each query run).
      </para>

      <para>
        Saved queries can be accessed from your <link
        linkend="manualHistory">query history</link>. This history is
        available for the duration of your session unless you log in -
        in which case you can then save your queries permanently (See <xref
        linkend="loggingIn"/>).
      </para>


      <mediaobject>
        <imageobject>
          <imagedata fileref="saving1.png" />
        </imageobject><textobject><phrase> </phrase></textobject>
      </mediaobject>

      <para>
        If you are logged in, it is also possible to save a query
        configuration with a name that you choose directly from the
        query builder. Once you have added fields to the <link
        linkend="manualOutputfields">output fields list</link> in the
        <link linkend="manualQuerybuilder">FlyMine query
        builder</link> a box at the bottom will become available for
        you to save your query with a specific name.
      </para>


      <mediaobject>
        <imageobject>
          <imagedata fileref="saving2.png" />
        </imageobject><textobject><phrase> </phrase></textobject>
      </mediaobject>

      </sect1>

      <sect1 id="manualExportingQueriesQueryBuilder">
          <title>Exporting queries as XML from the query builder</title>
 
           <para>Queries can be exported as xml from the query builder page - see screenshot below.
           </para>

           <para>Queries saved as xml can be imported into the FlyMine
           query builder - see <xref linkend="importingXMLQueries"/>
           </para>
 

          <mediaobject>
           <imageobject>
             <imagedata fileref="exportQuery2.png" />
          </imageobject><textobject><phrase> </phrase></textobject>
         </mediaobject>

    </sect1>



  <sect1 id="manualExamplequeries">
    <title>Example queries</title>
    <para>
      A number of <ulink url="/examples.do">example queries</ulink>
      are available to help you construct your own queries.
    </para>
    
    <para>
      Click on the query name to display the query in the query
      builder interface. From here you can edit the query or run it
      again.
    </para>
  </sect1>


 </chapter>



  <chapter id="manualBrowsingdata">
    <title>Browsing FlyMine</title>
    <para>
      There are two ways to browse the data in FlyMine:
      1. directly from the main query page or 2. through a query
      you construct yourself.
    </para>

    <sect1>
      <title>Browsing directly</title>

      <para>
        The FlyMine Quick Search, accessible from the main query page
        (see screenshot below), allows you to quickly and directly
        access the data in FlyMine.  Entering any object identifier
        (such as a gene name or identifier) will take you straight to
        the details page for that object (see <xref
        linkend="manualObjectDetails"/>). Wildcards (*) can be
        attached to any text entered to increase the scope of your
        search.  (A wild card added to the end of the text will search
        for anything beginning with that text (eg zen* will search zen
        and anything that begins with zen - and so your query could
        return several results such as zen, zen2 and zen-4).  A *
        added to the beginning of your text will search for anything
        that ends in that text (eg *_DROME will search for all entries
        ending in _DROME - ie all the Drosophila entries in
        Uniprot). The Quick Search is case-insensitive.
      </para>

      <para> In cases where more than one object is returned by your
        quick search, the results will provide a summary of each
        object with a link to each object details page.
     </para>
    
      <mediaobject>
        <imageobject>
          <imagedata fileref="browsing1.png" />
        </imageobject><textobject><phrase> </phrase></textobject>
      </mediaobject>
    </sect1>

    <sect1>
      <title>Browsing from a query</title>
      <para>
        Queries can be constructed using the FlyMine query builder in
        such a way that the results are browsable.  (see <xref
        linkend="manualQueryBuilder"/> for details on using the query
        builder). If you select an entire class to 'show' in the
        output (as opposed to selecting fields of a class, see
        screenshot below), your result will provide links to the
        details pages for the objects returned from that class, from
        where you can browse the information stored in the objects
        fields and in classes referenced from the object. (See <xref
        linkend="manualFields"/> and <xref
        linkend="manualObjectDetails"/> for more details).
      </para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="modelBrowserBrowsing1.png" />
        </imageobject><textobject><phrase> </phrase></textobject>
      </mediaobject>
 
   </sect1>
  </chapter>

  <chapter id="manualTemplatequeries">
    <title>Predefined template queries</title>

   <sect1>
      <title>Introduction</title>
    <para>
      To provide a more direct route to the data in FlyMine, a number
      of queries have been predefined as templates.  A template query
      provides a form with various boxes for you to fill in. A number
      of template queries have been predefined. These range from
      simple queries to more complex queries covering a wide range of
      data.  More template queries will be added as FlyMine develops.
    </para>

    <para>
      Template queries can be accessed from the main FlyMine query
      page.  Templates can be selected either via a link from the
      class categories section, where the templates have also been
      divided into appropriate biological categories (note that a
      template query may belong in more than category) or from the
      'Predefined template queries' section on the main query page,
      from where there is a link to all template queries (see
      screenshot below).  Alternatively, you can search the template
      queries by clicking on the Search Templates link on the main
      menu bar.
    </para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="templates1.png" />
        </imageobject><textobject><phrase> </phrase></textobject>
      </mediaobject>

    </sect1>

  
    <sect1>
      <title>How to run predefined template queries</title>
    <para>
      To run a template query:
    </para>

    <orderedlist>
      <listitem>
        <para>
          Select the query you wish to run either from the lists on
          the main Query page, by selecting 'view all template
          queries', or by searching the templates with the 'Search
          Templates' option.  Pressing the -&gt; next to the query
          description will take you to the template form.
        </para>

        <mediaobject>
          <imageobject>
            <imagedata fileref="templates1.png" />
          </imageobject><textobject><phrase> </phrase></textobject>
        </mediaobject>
      </listitem>

      <listitem>
        <para>
          Fill in the boxes with the appropriate values or
          leave them with the default values shown (see screenshot
          below).
        </para>
      </listitem>

      <listitem>
        <para>
          Pressing the 'View results' button will take you directly to the
          results page (see <xref linkend="manualResults"/> for more
          details). Pressing the 'View query' button will display the template
          query in the FlyMine Query Builder.  Here you can either use the
          template as a starting point for building a more complex query, edit
          the query or simply run the query as it is.  Press 'Show results' to
          run your query. See <xref linkend="manualQueryBuilder"/> for more
          details.
        </para>

        <mediaobject>
          <imageobject>
            <imagedata fileref="templates2.png" />
          </imageobject><textobject><phrase> </phrase></textobject>
        </mediaobject>

      </listitem>
    </orderedlist>
   </sect1>
  </chapter>



  <chapter id="manualResults">
    <title>Results</title>
      <sect1>
        <title>Introduction</title>

      <para>
        FlyMine results can be either a table of simple attributes or
        a table of object summaries or a combination of both. In
        addition there are object details pages which provide more
        information about specific objects.  The type of result table
        displayed depends on what items have been selected to show in
        the results - ie. only class fields, only classes or a
        combination of fields and classes.  See <xref
        linkend="manualFields"/> for an explanation of classes and
        fields.  Each of these types of result are described
        in more detail in the following sections . The general
        features of each result display are described below.
      </para>

    <para>
      The results page displays the first 10 items returned by your
      query.
    </para>

    <para>
      The number of items displayed can be changed by changing the
      number in the Page size box and pressing Change.
    </para>

    <para>
      You can scroll through the items using Next, or go to the last
      10 items using Last.
    </para>

    <para>
      The total number of items returned by your query is estimated.
      An estimate is given because, for large queries, only a subset
      of the total number of items is initially returned by the
      query. This is to improve query run time for large queries.
      Clicking on 'last' will give you the exact number of items
      returned by your query.
    </para>

    <para>
      From the results page you can save your data to a bag (see <xref
      linkend="manualSavingBags"/>) and export your data in various
      formats (see <xref linkend="manualExportingData"/>).
    </para>

    <para>
      If there are any objects in your results (as opposed to
      class fields) you can click on an object to view it in
      detail (see <xref linkend="manualObjectDetails"/>).
    </para>

    <mediaobject>
      <imageobject>
        <imagedata fileref="tableResults1.png" />
      </imageobject><textobject><phrase> </phrase></textobject>
    </mediaobject>


         
        </sect1>

        <sect1>
          <title>Exportable results tables</title>
            <para>
               An exportable table of simple attributes can be created
               if a query is constructed to only show class fields (as
               opposed to entire objects belonging to a class), as
               these consist of a single value, such as a name or
               number. Such tables are useful if you wish to download
               data (to a speadsheet for example).  The screenshots
               below show an example of a query constructed to show
               only class fields and the table it produces.
            </para>


        <mediaobject>
          <imageobject>
            <imagedata fileref="tableResults2.png" />
          </imageobject><textobject><phrase> </phrase></textobject>
        </mediaobject>

        </sect1>

      <sect1>
          <title>Object summary results</title>
              
            <para>
             If a query is constructed such that only classes are
             selected to 'show' in the results, the results table will
             be a summary of the objects returned by your query.  The
             screenshot below shows an example of Gene objects
             returned by a query.  Each object in the summary table
             has a link to a details page which provides more
             information about that object - see <xref
             linkend="manualObjectDetails"/>
             </para>
                


        <mediaobject>
          <imageobject>
            <imagedata fileref="geneDetails1.png" />
          </imageobject><textobject><phrase> </phrase></textobject>
        </mediaobject>

       </sect1>


  <sect1 id="manualObjectDetails">
    <title>Object details pages</title>

    <para>
      For every object in the FlyMine database there is a details page
      which provides all the fields, references and collections for
      that object along with additional information such as the
      GBrowse genome viewer for sequence features. (see <xref
      linkend="manualFields"/> for an explanation of these concepts).
    </para>

    <para>
      The object details page can be accessed from your results
      by clicking on the [details...] links. From this detailed
      results view it is possible to browse the information contained
      in the referenced classes (see screenshot below).
    </para>

    <para>
      If you are using the Quick Search from the main query
      page, you may be taken to an object details page directly if
      only one object in the database matches your search.
    </para>

    <mediaobject>
      <imageobject>
        <imagedata fileref="resultsDetails1.png" />
      </imageobject><textobject><phrase> </phrase></textobject>
    </mediaobject>
   </sect1>

  </chapter>




<chapter id = "Bags">
  <title>Bags</title>

  <sect1>
     <title>Introduction</title>
       
      <para>
        Bags are holders for lists of data.  The data in a bag can be
        either fields (eg a list of gene identifiers) or a set of
        objects (or a combination of fields and objects). The
        following sections describe how bags can be created and used
        in FlyMine.
      </para>

  </sect1>




  <sect1 id="manualSavingBags">
    <title>Saving bags of data from a query</title>

    <para>
      Data can be saved into 'bags' and stored in your query history.
      To save your data to a bag select the required data and either
      add it to an existing bag or save it to a new bag, using the
      boxes displayed underneath the results. Selecting the
      check-boxes next to the column headings will select the entire
      column for saving.  Alternatively, individual items can be saved
      by selecting check-boxes next to the items. Saved bags of data
      can be viewed from your History page (accessible from the menu
      bar - see <xref linkend="manualHistory"/>).
    </para>

    <para>
      Saved bags of data can be used to constrain new queries, perform
      logical operations and can be exported (see <xref
      linkend="manualUsingBags"/>. If you have saved bags of data
      these will become available for constraining queries in the
      constraint list of the query builder page.
    </para>


    <mediaobject>
      <imageobject>
        <imagedata fileref="savingBags1.png" />
      </imageobject><textobject><phrase> </phrase></textobject>
    </mediaobject>
   </sect1>

  <sect1 id="manualCreatingBag">
    <title>Creating a bag of identifiers from an external source</title>

    <para>
      A bag can be created from an external source.  From the main
      query page click on the 'Create a bag of identifiers' link (see
      screenshot below).
    </para>


    <mediaobject>
      <imageobject>
        <imagedata fileref="createBag1.png" />
      </imageobject><textobject><phrase> </phrase></textobject>
    </mediaobject>


    <para>
      To make your bag, either type or cut and paste in a list of
      identifiers, or upload a list from a file. Enter a name for your
      bag (or leave the default) and press 'Make bag' to save the bag
      of identifiers to your <link
      linkend="manualHistory">history</link>.  Do not mix up different
      types of identifiers if want to use your bag to constrain a
      query - eg make a bag of gene symbols only or gene identifiers
      only.  See <xref linkend="manualUsingBags"/> for details on how
      to use a bag of identifiers in a query and for performing the
      logical operations union and intersect.
    </para>

    <mediaobject>
      <imageobject>
        <imagedata fileref="createBag2.png" />
      </imageobject><textobject><phrase> </phrase></textobject>
    </mediaobject>
  </sect1>

  <sect1 id="manualUsingBags">
    <title>Making use of bags</title>

    <para>Bags can be used in three different ways: to constrain a
    query (either a template query or in the query builder), to
    perform logical operations and to export data.  The following
    sections describe each of these in more detail.
    </para>
  </sect1>


  <sect1 id="logicalOperations">
    <title>Using bags for logical operations</title>

    <para>
      The logical operations, union and intersect, can be performed on bags of
      data from your <link linkend="manualHistory">history</link> page. Use the
      checkbuttons next to your saved bags to select two or more bags for
      these operations. (see screenshot below).
    </para>

    <mediaobject>
      <imageobject>
        <imagedata fileref="logicalOps1.png" />
      </imageobject><textobject><phrase> </phrase></textobject>
    </mediaobject>
    
     </sect1>

    <sect1 id="constrainingTemplatesWithBags">
        <title>Using bags to constrain template queries</title>
   
        <para>
           Any variable (box) in a template query can be constrained
           to a bag (or 'not in' a bag) rather than a single
           value. If you have bags saved in your history the option to
           constrain each variable to a bag will appear automatically
           (see screenshot below). For example, if you want to run a
           particular query for a list of genes rather than a single
           gene, you can create a bag of gene symbols/identifiers and
           run a template query using this bag.
        </para>

    <mediaobject>
      <imageobject>
        <imagedata fileref="templateBags1.png" />
      </imageobject><textobject><phrase> </phrase></textobject>
    </mediaobject>


   </sect1>


  <sect1 id="constrainingQueryBuilderWithBags">
     <title>Using bags to constrain queries in the query builder</title>

    <para>
      Bags of data can be used to constrain queries in the query
      builder.  If you have bags of data saved in your history you will
      automatically be able to use these from within the query builder
      to constrain a query.  When a field or class is selected for
      constraining in the query builder the constraint box in the right
      hand constaint pane will ask you to either add a constraint or
      constrain to a choice of your bags (see screenshot below).
    </para>

    <mediaobject>
      <imageobject>
        <imagedata fileref="constrain2Bag1.png" />
      </imageobject><textobject><phrase> </phrase></textobject>
    </mediaobject>
 
  </sect1>
  

  <sect1 id="exportingBags">
      <title>Exporting the contents of a bag</title>

  <para>
      To export the contents of a bag, click on the bag name. This
      will display the contents of the bag as a results page - with
      the export options available at the bottom of the page - see
      <xref linkend="manualExportingData"/>)
  </para>

 </sect1>

</chapter>



  <chapter id="manualExportingData">
    <title>Exporting data</title>

   <sect1 id="exportingTables">
      <title>Exporting Tables</title>

    <para>
      Data can be exported from the results page in various formats -
      currently Excel (or open office) format, comma separated values,
      tab separated values, or for items with sequences, fasta format.
      The entire data set will be exported - you do not need to select
      any check-boxes. If you do not wish to export certain columns
      these can be hidden using the 'hide' option in the column
      header.
    </para>

    <para>It is best to create a table of simple attributes (see <xref
    linkend="manualResults"/> ) if you wish to export data. Although
    you can export results containing object summaries you will
    probably find the format fairly un-usable.  An exception to this
    is if you want to export a fasta file - in this case you need to
    select the object (class) to 'show' in your results (eg the Gene or
    Protein class) - see <xref linkend="manualExportingFasta"/>.
    </para>


    <mediaobject>
      <imageobject>
        <imagedata fileref="exportingData1.png" />
      </imageobject><textobject><phrase> </phrase></textobject>
    </mediaobject>

   </sect1>

 
    <sect1 id="manualExportingFasta">
       <title>Exporting fasta files</title>
 
    <para>To export a fasta file of sequences you must create a query
    which returns the object summaries for each object you want to
    export (eg a set of Gene or Protein objects) (as opposed to simple
    fields such as the gene symbol or identifier - see <xref
    linkend="manualFields"/>)
    </para>

    <para>Some template queries are available which will return
     results suitable for exporting fasta files (eg output genes from a
     particular organism in a format suitable for creating a fasta
     database).
    </para>


    <mediaobject>
      <imageobject>
        <imagedata fileref="exportingDataFasta1.png" />
      </imageobject><textobject><phrase> </phrase></textobject>
    </mediaobject>

    </sect1>
 
  </chapter>


  <chapter id="manualHistory">
    <title>History</title>

      <sect1>
        <title>Introduction</title>
    <para>
      The history page displays your saved bags and queries.
    </para>

    <para>
      A saved query is a copy of the actual query configuration,
      created in the query builder.
    </para>

    <para>
      All queries that you run are saved in your query history with
      the default name query_x (where x increments for each query run)
      You can also save a query with a name of your choice using the
      'Save query' box at the bottom of the query builder
      interface. (see <xref linkend="manualSavingqueries"/>)
    </para>

    <para>
    If you run a template query it will be saved to your query
    history.  However, if you then access this query from your
    history, it will be displayed in the query builder.  If you just
    wish to run this query again, press the 'Show results' button
    towards the bottom of the query builder.
    </para>

    <para>
      Saved bags are created by saving specific data from the results
      page, or are uploaded from an external source.  (see <xref
      linkend="manualSavingBags"/>).
    </para>
 

   <mediaobject>
      <imageobject>
        <imagedata fileref="history1.png" />
      </imageobject><textobject><phrase> </phrase></textobject>
    </mediaobject>

  </sect1>


     <sect1 id = "loggingIn">
	<title>Logging in</title>
	    
     <para>Your history will remain available to you only for the
     duration of a session unless you create and use a log in.  If you
     log in, your history will be stored permanently.
     </para>
 
     <para> To log in, click on the Log in link in the main menu bar.
     If you have never logged in before, enter your email address into
     the third box and press 'request password'.  A password will be
     emailed to you immediately.  You can then log in.  Your username
     is the email address for which you requested a password.  If you
     forget your password, enter your email address into the third box
     and it will be emailed to you again.
     </para>

    <mediaobject>
      <imageobject>
        <imagedata fileref="logIn1.png" />
      </imageobject><textobject><phrase> </phrase></textobject>
    </mediaobject>

    </sect1>    
 
    <sect1 id="savingPermanently">
         <title>Saving queries permanently to your history</title>
     
      <para>All queries that you run are saved in your query history
      with the default name query_x (where x increments for each query
      run).  Such queries however will only be available for the
      duration of a session unless you save them permanently to your
      history.
      </para>

      <para>To save a query permanently, use the 'Save' option
      available next to the query - see screenshot below. NOTE: you
      must be logged in to save a query permanently (see <xref
      linkend="loggingIn"/>).
      </para>

   <mediaobject>
      <imageobject>
        <imagedata fileref="savingPermanently1.png" />
      </imageobject><textobject><phrase> </phrase></textobject>
    </mediaobject>

    </sect1>


    <sect1>
      <title>Using saved queries</title>


      <para>The list of saved queries includes columns giving the date
      the query was created, the class from which the query was
      started, and the fields selected to show in the results output
      (see screenshot below).
      </para>

      <para>
        Click on the query name to display the query in the query
        builder interface. From here you can edit the query or run it
        again. (see <xref linkend="manualQueryBuilder"/>).
      </para>

      <para>
      The name of a query can be changed using the edit button (see screenshot below).
      </para>

      <para>Saved queries can be exported as xml - see <xref linkend="exportingQueriesHistory"/>.
      </para>

   <mediaobject>
      <imageobject>
        <imagedata fileref="history2.png" />
      </imageobject><textobject><phrase> </phrase></textobject>
    </mediaobject>

    </sect1>

    <sect1 id="exportingQueriesHistory">
       <title>Exporting queries</title>
          
         <para>Queries can be exported as xml from your history.  Each query has an 'Export' option.
         </para>

   <mediaobject>
      <imageobject>
        <imagedata fileref="exportQuery1.png" />
      </imageobject><textobject><phrase> </phrase></textobject>
    </mediaobject>


     <para>Queries saved as xml can be imported from the main query
     page see <xref linkend="importingXMLQueries"/>.  This
     export/import feature is therefore useful if you wish to pass a
     query on to someone else.
     </para>

     <para>
     Queries can also be exported as xml from the query builder page -
     see <xref linkend="manualExportingQueriesQueryBuilder"/>
     </para>

    </sect1>

    <sect1>
      <title>Using saved bags</title>

      <para>
        Click on the bag name to view its items in the results
        page. Bags can be used to perform logical operations and to
        constrain queries - see <xref linkend="manualUsingBags"/>)
      </para>
    </sect1>

    <sect1>
      <title>Deleting saved bags and queries</title>

      <para>
        Select the check-boxes of the bags or queries you wish to delete and
        press the appropriate Delete button.
      </para>
    </sect1>
 </chapter> 

  <chapter id="manualCreatingTemplates">
    <title>Creating your own template queries</title>

      <sect1>
        <title>Introduction</title>
         <para>
           Any query that has been built using the query builder can
           be saved as a template query (as long as it includes some
           constraints).  Templates that you create yourself are saved
           to your history.
         </para>

         <para>Templates are created from the main query builder page.
         In the bottom right hand corner is a button called 'Build
         Template' (note you will only be able to see this if you are
         logged in):
         </para>

  <mediaobject>
      <imageobject>
        <imagedata fileref="buildTemplate1.png" />
      </imageobject><textobject><phrase> </phrase></textobject>
    </mediaobject>


      </sect1>


      <sect1>
        <title>Building a template</title>
         <para>
         The Build Template form first provides the following fields for you to fill in:  
         </para>

      <orderedlist numeration="upperalpha">
        <listitem>
          <para>
           Short name:  Give your template query a short name.  
          </para>
        </listitem>

        <listitem>
          <para>
          Description: The description will appear in your list of
          template queries and so should provide as much information
          as possible about what the template will do, without being
          too long.  It should distinguish it from other template
          queries.
          </para>
        </listitem>

        <listitem>
          <para>
           Keywords: Provide some key words that can be used for
       searching your templates.
          </para>
        </listitem>
        </orderedlist>
    


          <para>The template form then provides a box containing
          details of the constraints you specified in the query
          builder.  You can create the template so that your
          constraints can either be edited (ie changed in the template
          query) or set (ie cannot be changed).  However, at least one
          constraint has to be editable.  Set up your constraints in
          the following way:
          </para>


      <orderedlist numeration="upperalpha">
        <listitem>
          <para>
           Decide which constraints you want to be editable by selecting the appropriate check boxes. 
           </para>
        </listitem>

        <listitem>
          <para>
          Give each constraint (whether editable or not) a label.  The
          label you give will appear above the constraint box in the
          template query and so should provide direction as to what
          the query is going to do.  For example, if you are creating
          a template query to 'find genes annotated with a particular
          GO term from a particular organism' your labels might read
          something like, A. organism constraint: 'Fine genes from
          organism:'; B. GO term constraint: 'Annotated with GO
          term:'.  It will become clear if your labels make sense when
          you preview your query.
          </para>
        </listitem>

        <listitem>
          <para>
          Use the preview button to check your template before you
          create it and make any necessary changes.
         </para>
        </listitem>

        <listitem>
          <para>
          Press the 'Create template' button to create the template.
          You will be able to view and run this template from your
          history page.
          </para>
        </listitem>
       </orderedlist>

  <mediaobject>
      <imageobject>
        <imagedata fileref="buildTemplate2.png" />
      </imageobject><textobject><phrase> </phrase></textobject>
    </mediaobject>


      </sect1>


  </chapter>


   <chapter id="importingXMLQueries">
       <title>Importing queries in xml format</title>

     <para>Queries saved as xml can be imported from the main
     query page - see screenshot below. 
     </para>

     <para>Queries can be saved as xml either from the query builder
     or from your history page (see <xref
     linkend="manualExportingQueriesQueryBuilder"/> and <xref
     linkend="exportingQueriesHistory"/>).
     </para>

    <para>
     This export/import feature is therefore useful
     if you wish to pass a query on to someone else.
    </para>


   <mediaobject>
      <imageobject>
        <imagedata fileref="importXML1.png" />
      </imageobject><textobject><phrase> </phrase></textobject>
    </mediaobject>

   </chapter>



  <chapter id="manualFlyMineIdentifiers">
    <title>Identifiers, Accessions and Synonyms in FlyMine</title>
    <para>
      This page describes the meanings and origins of identifiers of
      biological objects in FlyMine. As FlyMine aggregates data from
      multiple sources there are often many different identifiers for the
      same entity. Available identifiers vary between biological object
      type, organism and data source. FlyMine attempts to choose a standard
      or commonly used unique identifier for each biological type and
      retains all other identifiers as synonyms with a reference to their
      source.
    </para>

    <para>
      BioEntity is the root class of all biological objects in the
      FlyMine model. This has an identifier field that all subclasses (e.g.
      Chromosome, Gene, Exon) inherit. The identifier field is almost always
      populated with a value unique in the context of a particular organism.
      The only time when 'identifier' can be empty is when another primary
      identifier field exists (e.g. Gene, Protein) and a data source has
      only provided the alternative.
    </para>

    <para>
      In some cases this is a standard identifier (e.g. Protein -
      UniProt id), for biological types that are not so widely referenced
      this will be the identifier for the primary data source used (e.g.
      Exon - Ensembl stable id). For some types the identifier is more akin
      to a name than a universal identifier (e.g. Chromsome - 'X'). All
      widely used identifiers that FlyMine has loaded are also stored as
      Synonyms of the BioEntity linked to the source.
    </para>

    <para>
      Gene - for some organisms there are two commonly used
      identification schemes, for example Drosophila has FlyBase FBgn*** and
      Computed CG***. Gene has an additional identifier field, 'organismDbId',
      which contains the id used in the main annotation database for each
      organism. So for Drosophila 'organismDbId' is a FlyBase id and
      'identifier' is CG*** id.  In addition Gene has a 'name' and field. All 
      additional names and identifiers should be available as Synonyms.
    </para>

    <para>
      Protein - Where possible the 'identifier' field id the UniProt identifer 
      (e.g. 18C_DROME). Protein has an additional 'primaryAccession' field which 
      will be the UniProt primary accession where available (e.g. P16909). All 
      accession numbers available in UniProt are stored as synonyms with type 
      'accession' (i.e. P16909, Q9VPA8).
    </para>

    <para>
      It is conceivable that a data source could provide a Protein
      with a TrEMBL identifier/accession which has been superceeded as the
      primary UniProt identifier/accesssion by the inclusion of that protein
      in SwissProt. This could result in two Protein objects existing in the
      FlyMine database representing the same actual protein - one with the
      current UniProt ids, on with TrEMBL ids. We aim to run a
      post-processing step to find and correct these situations in future.
    </para>

    <para>
      Synonyms represent alternative names and accessions for a
      BioEntity. The 'source' reference points at an InfoSource object (i.e.
      Database, Publication) from which the synonym was loaded.  Synonym has
      a 'type' field which defines it as an 'accession', 'identifier'  or a 
      'name'.
    </para>
  </chapter>

  <chapter id="manualDataModel">
    <title>The FlyMine Data Model</title>
    <para>
      The FlyMine database is built using
      <ulink url="http://www.intermine.org"> InterMine</ulink>, an open-source data
      warehouse system for integrating the data from many sources into one
      object-based database. The FlyMine data model is generated by merging
      existing and emerging ontologies and standards (e.g. MAGE, SO, PSI),
      thus enabling data to be loaded from a variety of sources and
      providing the flexibility to easily incorporate new data sources as
      they appear. Additional FlyMine specific classes help link the
      ontologies and provide classes relating to the evidence and source for
      a particular piece of data. To get the most out of querying FlyMine it
      is useful to understand a bit about the underlying data model. First
      of all it is useful to understand the concepts of
      <link linkend="manualCOF">classes, objects and fields</link>.
    </para>
  </chapter>

  <chapter id="manualCOF">
    <title>Classes, Objects and Fields - the basics</title>
    <para>
      Classes can be thought of as templates to describe information
      about a specific type of thing. Things which have similar properties
      belong to the same class. For example in FlyMine there is a 'Gene'
      class. The Gene class describes properties of genes. The actual
      properties are known as fields. The class is a holder for a set of
      fields that provide information about the 'thing'. For example the
      Gene class has the fields name, residues etc. An object is an actual
      member of a class (known as an 'instance' of that class). For example,
      the Notch gene is a member of the gene class. Every object of a class
      has the set of properties (fields) that describe that class, although
      some of these fields may be empty (ie. there may not be any data
      available for some fields). The classes in the FlyMine data model form
      a hierarchy with classes lower down the hierarchy being
      specialisations of classes higher up. For example, the transcript
      class forms more specialised subclasses such as primary transcript,
      processed transcript, tRNA etc. The top class in the model is called
      the InterMine object class. Every class in FlyMine is therefore a
      specialisation of the InterMine object class.
    </para>

    <para>
      Classes in the hierarchy are linked together by references. A
      reference is a pointer from one class to another class. For example,
      The Transcript class has a reference to the exon class as exons are
      part of a transcript. A specific object of a class has a reference to
      a specific object or objects in another class. For example, there is a
      reference between the Gene class and the Transcript class. In practise
      this actually means that individual objects of the Gene class have a
      reference to specific objects of the transcripts class. ie. a
      particular gene object has particular transcripts. When a class has a
      reference to another class, the referenced class will appear as field
      within the class.
    </para>

    <para>
      Fields can be one of several different data types. For example
      some fields simply contain one piece of information, such as a
      name.  In this case the field is the type 'String' (a String is
      basically a piece of text that can include letters and
      numbers). Similarly, fields that contain just a number will be of
      the type, integer. A field that is a reference to another class
      will be of type 'class'. Fields that contain a list of objects (or
      references to objects of a different class) are known as
      collections. See <xref linkend="manualModelbrowser"/> for more
      information.
    </para>

    <mediaobject>
      <imageobject>
        <imagedata fileref="classDiag3.gif" />
      </imageobject><textobject><phrase> </phrase></textobject>
    </mediaobject>

    <mediaobject>
      <imageobject>
        <imagedata fileref="objectDiag1.gif" />
      </imageobject><textobject><phrase> </phrase></textobject>
    </mediaobject>
  </chapter>

  <chapter id="manualSelectingData">
    <title>Selecting data from classes</title>

    <para>
      You can think of the classes as boxes containing lots of individual
      items (objects). To create a query you want certain items from certain
      boxes. You therefore have to select the boxes that require the items you
      want and constrain the boxes so that you only select the subset of items
      in the boxes that you require. To query FlyMine you therefore select the
      classes that hold the objects you require. Constraints can be applied to
      the objects contained in a class, so that only a certain subset of those
      objects which have the required characteristics are selected. For example
      the gene class contains a large number of genes (gene objects) from all
      the organisms represented in FlyMine. However you may only be interested
      in data related to one specific gene. You would therefore constrain the
      gene name field of the gene class to that of the required gene.
    </para>

    <mediaobject>
      <imageobject>
        <imagedata fileref="constrainDiag2.gif" />
      </imageobject><textobject><phrase> </phrase></textobject>
    </mediaobject>
  </chapter>

  <chapter id="manualCombiningData">
    <title>Combining data from different classes</title>
    <para>
      Because of the relationships between the objects in the classes you
      may only need to constrain one class to retrieve a subset of items from
      another class. eg if you want all the genes from Drosophila, you only need
      to constrain the organism class to Drosophila to retrieve that subset of
      genes from the gene class. If you wish to know about the transcripts of a
      particular gene you would combine information from the Gene class and the
      Transcript class. By constraining the 'name' field of the gene class to a
      particular gene, you will only retrieve information from the transcripts
      class that relates to that gene (ie you do not need to apply the
      constraint to the transcripts class as well). This is because that
      particular gene object has a relationship to particular objects
      (instances) of the transcript class (ie those transcripts that are
      produced from that particular gene).
    </para>

    <mediaobject>
      <imageobject>
        <imagedata fileref="constrainDiag1.gif" />
      </imageobject><textobject><phrase> </phrase></textobject>
    </mediaobject>
  </chapter>

  <chapter id="manualConstrainingData">
    <title>Constraining to subclasses</title>

    <para>
      Some classes are subdivided in to more specialised subclasses. For
      some queries you may only be interested in data relating to a particular
      subclass of a class. For example, you may only be interested in the tRNA
      transcripts. In these cases you need to constrain the class to the
      subclass that you require. The difference between this and the examples
      above is that you are constraining the actual class, rather than a field
      of a class.
    </para>

    <mediaobject>
      <imageobject>
        <imagedata fileref="constrainDiag3.gif" />
      </imageobject><textobject><phrase> </phrase></textobject>
    </mediaobject>
  </chapter>

  <appendix id="docLicence" label="A">
    <title>
      GNU Free Documentation License
    </title>
    <para>
      <synopsis>
		GNU Free Documentation License
		  Version 1.2, November 2002


 Copyright (C) 2000,2001,2002  Free Software Foundation, Inc.
     59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 Everyone is permitted to copy and distribute verbatim copies
 of this license document, but changing it is not allowed.


0. PREAMBLE

The purpose of this License is to make a manual, textbook, or other
functional and useful document "free" in the sense of freedom: to
assure everyone the effective freedom to copy and redistribute it,
with or without modifying it, either commercially or noncommercially.
Secondarily, this License preserves for the author and publisher a way
to get credit for their work, while not being considered responsible
for modifications made by others.

This License is a kind of "copyleft", which means that derivative
works of the document must themselves be free in the same sense.  It
complements the GNU General Public License, which is a copyleft
license designed for free software.

We have designed this License in order to use it for manuals for free
software, because free software needs free documentation: a free
program should come with manuals providing the same freedoms that the
software does.  But this License is not limited to software manuals;
it can be used for any textual work, regardless of subject matter or
whether it is published as a printed book.  We recommend this License
principally for works whose purpose is instruction or reference.


1. APPLICABILITY AND DEFINITIONS

This License applies to any manual or other work, in any medium, that
contains a notice placed by the copyright holder saying it can be
distributed under the terms of this License.  Such a notice grants a
world-wide, royalty-free license, unlimited in duration, to use that
work under the conditions stated herein.  The "Document", below,
refers to any such manual or work.  Any member of the public is a
licensee, and is addressed as "you".  You accept the license if you
copy, modify or distribute the work in a way requiring permission
under copyright law.

A "Modified Version" of the Document means any work containing the
Document or a portion of it, either copied verbatim, or with
modifications and/or translated into another language.

A "Secondary Section" is a named appendix or a front-matter section of
the Document that deals exclusively with the relationship of the
publishers or authors of the Document to the Document's overall subject
(or to related matters) and contains nothing that could fall directly
within that overall subject.  (Thus, if the Document is in part a
textbook of mathematics, a Secondary Section may not explain any
mathematics.)  The relationship could be a matter of historical
connection with the subject or with related matters, or of legal,
commercial, philosophical, ethical or political position regarding
them.

The "Invariant Sections" are certain Secondary Sections whose titles
are designated, as being those of Invariant Sections, in the notice
that says that the Document is released under this License.  If a
section does not fit the above definition of Secondary then it is not
allowed to be designated as Invariant.  The Document may contain zero
Invariant Sections.  If the Document does not identify any Invariant
Sections then there are none.

The "Cover Texts" are certain short passages of text that are listed,
as Front-Cover Texts or Back-Cover Texts, in the notice that says that
the Document is released under this License.  A Front-Cover Text may
be at most 5 words, and a Back-Cover Text may be at most 25 words.

A "Transparent" copy of the Document means a machine-readable copy,
represented in a format whose specification is available to the
general public, that is suitable for revising the document
straightforwardly with generic text editors or (for images composed of
pixels) generic paint programs or (for drawings) some widely available
drawing editor, and that is suitable for input to text formatters or
for automatic translation to a variety of formats suitable for input
to text formatters.  A copy made in an otherwise Transparent file
format whose markup, or absence of markup, has been arranged to thwart
or discourage subsequent modification by readers is not Transparent.
An image format is not Transparent if used for any substantial amount
of text.  A copy that is not "Transparent" is called "Opaque".

Examples of suitable formats for Transparent copies include plain
ASCII without markup, Texinfo input format, LaTeX input format, SGML
or XML using a publicly available DTD, and standard-conforming simple
HTML, PostScript or PDF designed for human modification.  Examples of
transparent image formats include PNG, XCF and JPG.  Opaque formats
include proprietary formats that can be read and edited only by
proprietary word processors, SGML or XML for which the DTD and/or
processing tools are not generally available, and the
machine-generated HTML, PostScript or PDF produced by some word
processors for output purposes only.

The "Title Page" means, for a printed book, the title page itself,
plus such following pages as are needed to hold, legibly, the material
this License requires to appear in the title page.  For works in
formats which do not have any title page as such, "Title Page" means
the text near the most prominent appearance of the work's title,
preceding the beginning of the body of the text.

A section "Entitled XYZ" means a named subunit of the Document whose
title either is precisely XYZ or contains XYZ in parentheses following
text that translates XYZ in another language.  (Here XYZ stands for a
specific section name mentioned below, such as "Acknowledgements",
"Dedications", "Endorsements", or "History".)  To "Preserve the Title"
of such a section when you modify the Document means that it remains a
section "Entitled XYZ" according to this definition.

The Document may include Warranty Disclaimers next to the notice which
states that this License applies to the Document.  These Warranty
Disclaimers are considered to be included by reference in this
License, but only as regards disclaiming warranties: any other
implication that these Warranty Disclaimers may have is void and has
no effect on the meaning of this License.


2. VERBATIM COPYING

You may copy and distribute the Document in any medium, either
commercially or noncommercially, provided that this License, the
copyright notices, and the license notice saying this License applies
to the Document are reproduced in all copies, and that you add no other
conditions whatsoever to those of this License.  You may not use
technical measures to obstruct or control the reading or further
copying of the copies you make or distribute.  However, you may accept
compensation in exchange for copies.  If you distribute a large enough
number of copies you must also follow the conditions in section 3.

You may also lend copies, under the same conditions stated above, and
you may publicly display copies.


3. COPYING IN QUANTITY

If you publish printed copies (or copies in media that commonly have
printed covers) of the Document, numbering more than 100, and the
Document's license notice requires Cover Texts, you must enclose the
copies in covers that carry, clearly and legibly, all these Cover
Texts: Front-Cover Texts on the front cover, and Back-Cover Texts on
the back cover.  Both covers must also clearly and legibly identify
you as the publisher of these copies.  The front cover must present
the full title with all words of the title equally prominent and
visible.  You may add other material on the covers in addition.
Copying with changes limited to the covers, as long as they preserve
the title of the Document and satisfy these conditions, can be treated
as verbatim copying in other respects.

If the required texts for either cover are too voluminous to fit
legibly, you should put the first ones listed (as many as fit
reasonably) on the actual cover, and continue the rest onto adjacent
pages.

If you publish or distribute Opaque copies of the Document numbering
more than 100, you must either include a machine-readable Transparent
copy along with each Opaque copy, or state in or with each Opaque copy
a computer-network location from which the general network-using
public has access to download using public-standard network protocols
a complete Transparent copy of the Document, free of added material.
If you use the latter option, you must take reasonably prudent steps,
when you begin distribution of Opaque copies in quantity, to ensure
that this Transparent copy will remain thus accessible at the stated
location until at least one year after the last time you distribute an
Opaque copy (directly or through your agents or retailers) of that
edition to the public.

It is requested, but not required, that you contact the authors of the
Document well before redistributing any large number of copies, to give
them a chance to provide you with an updated version of the Document.


4. MODIFICATIONS

You may copy and distribute a Modified Version of the Document under
the conditions of sections 2 and 3 above, provided that you release
the Modified Version under precisely this License, with the Modified
Version filling the role of the Document, thus licensing distribution
and modification of the Modified Version to whoever possesses a copy
of it.  In addition, you must do these things in the Modified Version:

A. Use in the Title Page (and on the covers, if any) a title distinct
   from that of the Document, and from those of previous versions
   (which should, if there were any, be listed in the History section
   of the Document).  You may use the same title as a previous version
   if the original publisher of that version gives permission.
B. List on the Title Page, as authors, one or more persons or entities
   responsible for authorship of the modifications in the Modified
   Version, together with at least five of the principal authors of the
   Document (all of its principal authors, if it has fewer than five),
   unless they release you from this requirement.
C. State on the Title page the name of the publisher of the
   Modified Version, as the publisher.
D. Preserve all the copyright notices of the Document.
E. Add an appropriate copyright notice for your modifications
   adjacent to the other copyright notices.
F. Include, immediately after the copyright notices, a license notice
   giving the public permission to use the Modified Version under the
   terms of this License, in the form shown in the Addendum below.
G. Preserve in that license notice the full lists of Invariant Sections
   and required Cover Texts given in the Document's license notice.
H. Include an unaltered copy of this License.
I. Preserve the section Entitled "History", Preserve its Title, and add
   to it an item stating at least the title, year, new authors, and
   publisher of the Modified Version as given on the Title Page.  If
   there is no section Entitled "History" in the Document, create one
   stating the title, year, authors, and publisher of the Document as
   given on its Title Page, then add an item describing the Modified
   Version as stated in the previous sentence.
J. Preserve the network location, if any, given in the Document for
   public access to a Transparent copy of the Document, and likewise
   the network locations given in the Document for previous versions
   it was based on.  These may be placed in the "History" section.
   You may omit a network location for a work that was published at
   least four years before the Document itself, or if the original
   publisher of the version it refers to gives permission.
K. For any section Entitled "Acknowledgements" or "Dedications",
   Preserve the Title of the section, and preserve in the section all
   the substance and tone of each of the contributor acknowledgements
   and/or dedications given therein.
L. Preserve all the Invariant Sections of the Document,
   unaltered in their text and in their titles.  Section numbers
   or the equivalent are not considered part of the section titles.
M. Delete any section Entitled "Endorsements".  Such a section
   may not be included in the Modified Version.
N. Do not retitle any existing section to be Entitled "Endorsements"
   or to conflict in title with any Invariant Section.
O. Preserve any Warranty Disclaimers.

If the Modified Version includes new front-matter sections or
appendices that qualify as Secondary Sections and contain no material
copied from the Document, you may at your option designate some or all
of these sections as invariant.  To do this, add their titles to the
list of Invariant Sections in the Modified Version's license notice.
These titles must be distinct from any other section titles.

You may add a section Entitled "Endorsements", provided it contains
nothing but endorsements of your Modified Version by various
parties--for example, statements of peer review or that the text has
been approved by an organization as the authoritative definition of a
standard.

You may add a passage of up to five words as a Front-Cover Text, and a
passage of up to 25 words as a Back-Cover Text, to the end of the list
of Cover Texts in the Modified Version.  Only one passage of
Front-Cover Text and one of Back-Cover Text may be added by (or
through arrangements made by) any one entity.  If the Document already
includes a cover text for the same cover, previously added by you or
by arrangement made by the same entity you are acting on behalf of,
you may not add another; but you may replace the old one, on explicit
permission from the previous publisher that added the old one.

The author(s) and publisher(s) of the Document do not by this License
give permission to use their names for publicity for or to assert or
imply endorsement of any Modified Version.


5. COMBINING DOCUMENTS

You may combine the Document with other documents released under this
License, under the terms defined in section 4 above for modified
versions, provided that you include in the combination all of the
Invariant Sections of all of the original documents, unmodified, and
list them all as Invariant Sections of your combined work in its
license notice, and that you preserve all their Warranty Disclaimers.

The combined work need only contain one copy of this License, and
multiple identical Invariant Sections may be replaced with a single
copy.  If there are multiple Invariant Sections with the same name but
different contents, make the title of each such section unique by
adding at the end of it, in parentheses, the name of the original
author or publisher of that section if known, or else a unique number.
Make the same adjustment to the section titles in the list of
Invariant Sections in the license notice of the combined work.

In the combination, you must combine any sections Entitled "History"
in the various original documents, forming one section Entitled
"History"; likewise combine any sections Entitled "Acknowledgements",
and any sections Entitled "Dedications".  You must delete all sections
Entitled "Endorsements".


6. COLLECTIONS OF DOCUMENTS

You may make a collection consisting of the Document and other documents
released under this License, and replace the individual copies of this
License in the various documents with a single copy that is included in
the collection, provided that you follow the rules of this License for
verbatim copying of each of the documents in all other respects.

You may extract a single document from such a collection, and distribute
it individually under this License, provided you insert a copy of this
License into the extracted document, and follow this License in all
other respects regarding verbatim copying of that document.


7. AGGREGATION WITH INDEPENDENT WORKS

A compilation of the Document or its derivatives with other separate
and independent documents or works, in or on a volume of a storage or
distribution medium, is called an "aggregate" if the copyright
resulting from the compilation is not used to limit the legal rights
of the compilation's users beyond what the individual works permit.
When the Document is included in an aggregate, this License does not
apply to the other works in the aggregate which are not themselves
derivative works of the Document.

If the Cover Text requirement of section 3 is applicable to these
copies of the Document, then if the Document is less than one half of
the entire aggregate, the Document's Cover Texts may be placed on
covers that bracket the Document within the aggregate, or the
electronic equivalent of covers if the Document is in electronic form.
Otherwise they must appear on printed covers that bracket the whole
aggregate.


8. TRANSLATION

Translation is considered a kind of modification, so you may
distribute translations of the Document under the terms of section 4.
Replacing Invariant Sections with translations requires special
permission from their copyright holders, but you may include
translations of some or all Invariant Sections in addition to the
original versions of these Invariant Sections.  You may include a
translation of this License, and all the license notices in the
Document, and any Warranty Disclaimers, provided that you also include
the original English version of this License and the original versions
of those notices and disclaimers.  In case of a disagreement between
the translation and the original version of this License or a notice
or disclaimer, the original version will prevail.

If a section in the Document is Entitled "Acknowledgements",
"Dedications", or "History", the requirement (section 4) to Preserve
its Title (section 1) will typically require changing the actual
title.


9. TERMINATION

You may not copy, modify, sublicense, or distribute the Document except
as expressly provided for under this License.  Any other attempt to
copy, modify, sublicense or distribute the Document is void, and will
automatically terminate your rights under this License.  However,
parties who have received copies, or rights, from you under this
License will not have their licenses terminated so long as such
parties remain in full compliance.


10. FUTURE REVISIONS OF THIS LICENSE

The Free Software Foundation may publish new, revised versions
of the GNU Free Documentation License from time to time.  Such new
versions will be similar in spirit to the present version, but may
differ in detail to address new problems or concerns.  See
http://www.gnu.org/copyleft/.

Each version of the License is given a distinguishing version number.
If the Document specifies that a particular numbered version of this
License "or any later version" applies to it, you have the option of
following the terms and conditions either of that specified version or
of any later version that has been published (not as a draft) by the
Free Software Foundation.  If the Document does not specify a version
number of this License, you may choose any version ever published (not
as a draft) by the Free Software Foundation.


ADDENDUM: How to use this License for your documents

To use this License in a document you have written, include a copy of
the License in the document and put the following copyright and
license notices just after the title page:

    Copyright (c)  YEAR  YOUR NAME.
    Permission is granted to copy, distribute and/or modify this document
    under the terms of the GNU Free Documentation License, Version 1.2
    or any later version published by the Free Software Foundation;
    with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
    A copy of the license is included in the section entitled "GNU
    Free Documentation License".

If you have Invariant Sections, Front-Cover Texts and Back-Cover Texts,
replace the "with...Texts." line with this:

    with the Invariant Sections being LIST THEIR TITLES, with the
    Front-Cover Texts being LIST, and with the Back-Cover Texts being LIST.

If you have Invariant Sections without Cover Texts, or some other
combination of the three, merge those two alternatives to suit the
situation.

If your document contains nontrivial examples of program code, we
recommend releasing these examples in parallel under your choice of
free software license, such as the GNU General Public License,
to permit their use in free software.
      </synopsis>
    </para>
  </appendix>

  <appendix id="sourceLicence" label="B">
    <title>
      GNU Lesser General Public License
    </title>
    <para>
      <synopsis>
                      GNU LESSER GENERAL PUBLIC LICENSE
                          Version 2.1, February 1999


 Copyright (C) 1991, 1999 Free Software Foundation, Inc.
     59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 Everyone is permitted to copy and distribute verbatim copies
 of this license document, but changing it is not allowed.

[This is the first released version of the Lesser GPL.  It also counts
 as the successor of the GNU Library Public License, version 2, hence
 the version number 2.1.]

Preamble

The licenses for most software are designed to take away your freedom to share
and change it. By contrast, the GNU General Public Licenses are intended to
guarantee your freedom to share and change free software--to make sure the
software is free for all its users. 

This license, the Lesser General Public License, applies to some specially
designated software packages--typically libraries--of the Free Software
Foundation and other authors who decide to use it. You can use it too, but we
suggest you first think carefully about whether this license or the ordinary
General Public License is the better strategy to use in any particular case,
based on the explanations below. 

When we speak of free software, we are referring to freedom of use, not price.
Our General Public Licenses are designed to make sure that you have the freedom
to distribute copies of free software (and charge for this service if you wish);
that you receive source code or can get it if you want it; that you can change
the software and use pieces of it in new free programs; and that you are
informed that you can do these things. 

To protect your rights, we need to make restrictions that forbid distributors to
deny you these rights or to ask you to surrender these rights. These
restrictions translate to certain responsibilities for you if you distribute
copies of the library or if you modify it. 

For example, if you distribute copies of the library, whether gratis or for a
fee, you must give the recipients all the rights that we gave you. You must make
sure that they, too, receive or can get the source code. If you link other code
with the library, you must provide complete object files to the recipients, so
that they can relink them with the library after making changes to the library
and recompiling it. And you must show them these terms so they know their
rights. 

We protect your rights with a two-step method: (1) we copyright the library, and
(2) we offer you this license, which gives you legal permission to copy,
distribute and/or modify the library. 

To protect each distributor, we want to make it very clear that there is no
warranty for the free library. Also, if the library is modified by someone else
and passed on, the recipients should know that what they have is not the
original version, so that the original author's reputation will not be affected
by problems that might be introduced by others. 

Finally, software patents pose a constant threat to the existence of any free
program. We wish to make sure that a company cannot effectively restrict the
users of a free program by obtaining a restrictive license from a patent holder.
Therefore, we insist that any patent license obtained for a version of the
library must be consistent with the full freedom of use specified in this
license. 

Most GNU software, including some libraries, is covered by the ordinary GNU
General Public License. This license, the GNU Lesser General Public License,
applies to certain designated libraries, and is quite different from the
ordinary General Public License. We use this license for certain libraries in
order to permit linking those libraries into non-free programs. 

When a program is linked with a library, whether statically or using a shared
library, the combination of the two is legally speaking a combined work, a
derivative of the original library. The ordinary General Public License
therefore permits such linking only if the entire combination fits its criteria
of freedom. The Lesser General Public License permits more lax criteria for
linking other code with the library. 

We call this license the "Lesser" General Public License because it does Less to
protect the user's freedom than the ordinary General Public License. It also
provides other free software developers Less of an advantage over competing
non-free programs. These disadvantages are the reason we use the ordinary
General Public License for many libraries. However, the Lesser license provides
advantages in certain special circumstances. 

For example, on rare occasions, there may be a special need to encourage the
widest possible use of a certain library, so that it becomes a de-facto
standard. To achieve this, non-free programs must be allowed to use the library.
A more frequent case is that a free library does the same job as widely used
non-free libraries. In this case, there is little to gain by limiting the free
library to free software only, so we use the Lesser General Public License. 

In other cases, permission to use a particular library in non-free programs
enables a greater number of people to use a large body of free software. For
example, permission to use the GNU C Library in non-free programs enables many
more people to use the whole GNU operating system, as well as its variant, the
GNU/Linux operating system. 

Although the Lesser General Public License is Less protective of the users'
freedom, it does ensure that the user of a program that is linked with the
Library has the freedom and the wherewithal to run that program using a modified
version of the Library. 

The precise terms and conditions for copying, distribution and modification
follow. Pay close attention to the difference between a "work based on the
library" and a "work that uses the library". The former contains code derived
from the library, whereas the latter must be combined with the library in order
to run. 


TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
0. This License Agreement applies to any software library or other program which
contains a notice placed by the copyright holder or other authorized party
saying it may be distributed under the terms of this Lesser General Public
License (also called "this License"). Each licensee is addressed as "you". 

A "library" means a collection of software functions and/or data prepared so as
to be conveniently linked with application programs (which use some of those
functions and data) to form executables. 

The "Library", below, refers to any such software library or work which has been
distributed under these terms. A "work based on the Library" means either the
Library or any derivative work under copyright law: that is to say, a work
containing the Library or a portion of it, either verbatim or with modifications
and/or translated straightforwardly into another language. (Hereinafter,
translation is included without limitation in the term "modification".) 

"Source code" for a work means the preferred form of the work for making
modifications to it. For a library, complete source code means all the source
code for all modules it contains, plus any associated interface definition
files, plus the scripts used to control compilation and installation of the
library. 

Activities other than copying, distribution and modification are not covered by
this License; they are outside its scope. The act of running a program using the
Library is not restricted, and output from such a program is covered only if its
contents constitute a work based on the Library (independent of the use of the
Library in a tool for writing it). Whether that is true depends on what the
Library does and what the program that uses the Library does. 

1. You may copy and distribute verbatim copies of the Library's complete source
code as you receive it, in any medium, provided that you conspicuously and
appropriately publish on each copy an appropriate copyright notice and
disclaimer of warranty; keep intact all the notices that refer to this License
and to the absence of any warranty; and distribute a copy of this License along
with the Library. 

You may charge a fee for the physical act of transferring a copy, and you may at
your option offer warranty protection in exchange for a fee. 

2. You may modify your copy or copies of the Library or any portion of it, thus
forming a work based on the Library, and copy and distribute such modifications
or work under the terms of Section 1 above, provided that you also meet all of
these conditions: 


a) The modified work must itself be a software library. 
b) You must cause the files modified to carry prominent notices stating that you
changed the files and the date of any change. 
c) You must cause the whole of the work to be licensed at no charge to all third
parties under the terms of this License. 
d) If a facility in the modified Library refers to a function or a table of data
to be supplied by an application program that uses the facility, other than as
an argument passed when the facility is invoked, then you must make a good faith
effort to ensure that, in the event an application does not supply such function
or table, the facility still operates, and performs whatever part of its
purpose remains meaningful. 
(For example, a function in a library to compute square roots has a purpose that
is entirely well-defined independent of the application. Therefore, Subsection
2d requires that any application-supplied function or table used by this
function must be optional: if the application does not supply it, the square
root function must still compute square roots.) 

These requirements apply to the modified work as a whole. If identifiable
sections of that work are not derived from the Library, and can be reasonably
considered independent and separate works in themselves, then this License, and
its terms, do not apply to those sections when you distribute them as separate
works. But when you distribute the same sections as part of a whole which is a
work based on the Library, the distribution of the whole must be on the terms of
this License, whose permissions for other licensees extend to the entire whole,
and thus to each and every part regardless of who wrote it. 

Thus, it is not the intent of this section to claim rights or contest your
rights to work written entirely by you; rather, the intent is to exercise the
right to control the distribution of derivative or collective works based on the
Library. 

In addition, mere aggregation of another work not based on the Library with the
Library (or with a work based on the Library) on a volume of a storage or
distribution medium does not bring the other work under the scope of this
License. 

3. You may opt to apply the terms of the ordinary GNU General Public License
instead of this License to a given copy of the Library. To do this, you must
alter all the notices that refer to this License, so that they refer to the
ordinary GNU General Public License, version 2, instead of to this License. (If
a newer version than version 2 of the ordinary GNU General Public License has
appeared, then you can specify that version instead if you wish.) Do not make
any other change in these notices. 

Once this change is made in a given copy, it is irreversible for that copy, so
the ordinary GNU General Public License applies to all subsequent copies and
derivative works made from that copy. 

This option is useful when you wish to copy part of the code of the Library into
a program that is not a library. 

4. You may copy and distribute the Library (or a portion or derivative of it,
under Section 2) in object code or executable form under the terms of Sections 1
and 2 above provided that you accompany it with the complete corresponding
machine-readable source code, which must be distributed under the terms of
Sections 1 and 2 above on a medium customarily used for software interchange. 

If distribution of object code is made by offering access to copy from a
designated place, then offering equivalent access to copy the source code from
the same place satisfies the requirement to distribute the source code, even
though third parties are not compelled to copy the source along with the object
code. 

5. A program that contains no derivative of any portion of the Library, but is
designed to work with the Library by being compiled or linked with it, is called
a "work that uses the Library". Such a work, in isolation, is not a derivative
work of the Library, and therefore falls outside the scope of this License. 

However, linking a "work that uses the Library" with the Library creates an
executable that is a derivative of the Library (because it contains portions of
the Library), rather than a "work that uses the library". The executable is
therefore covered by this License. Section 6 states terms for distribution of
such executables. 

When a "work that uses the Library" uses material from a header file that is
part of the Library, the object code for the work may be a derivative work of
the Library even though the source code is not. Whether this is true is
especially significant if the work can be linked without the Library, or if the
work is itself a library. The threshold for this to be true is not precisely
defined by law. 

If such an object file uses only numerical parameters, data structure layouts
and accessors, and small macros and small inline functions (ten lines or less in
length), then the use of the object file is unrestricted, regardless of whether
it is legally a derivative work. (Executables containing this object code plus
portions of the Library will still fall under Section 6.) 

Otherwise, if the work is a derivative of the Library, you may distribute the
object code for the work under the terms of Section 6. Any executables
containing that work also fall under Section 6, whether or not they are linked
directly with the Library itself. 

6. As an exception to the Sections above, you may also combine or link a "work
that uses the Library" with the Library to produce a work containing portions of
the Library, and distribute that work under terms of your choice, provided that
the terms permit modification of the work for the customer's own use and reverse
engineering for debugging such modifications. 

You must give prominent notice with each copy of the work that the Library is
used in it and that the Library and its use are covered by this License. You
must supply a copy of this License. If the work during execution displays
copyright notices, you must include the copyright notice for the Library among
them, as well as a reference directing the user to the copy of this License.
Also, you must do one of these things: 


a) Accompany the work with the complete corresponding machine-readable source
code for the Library including whatever changes were used in the work (which
must be distributed under Sections 1 and 2 above); and, if the work is an
executable linked with the Library, with the complete machine-readable "work
that uses the Library", as object code and/or source code, so that the user can
modify the Library and then relink to produce a modified executable containing
the modified Library. (It is understood that the user who changes the contents
of definitions files in the Library will not necessarily be able to recompile
the application to use the modified definitions.) 
b) Use a suitable shared library mechanism for linking with the Library. A
suitable mechanism is one that (1) uses at run time a copy of the library
already present on the user's computer system, rather than copying library
functions into the executable, and (2) will operate properly with a modified
version of the library, if the user installs one, as long as the modified
version is interface-compatible with the version that the work was made with. 
c) Accompany the work with a written offer, valid for at least three years, to
give the same user the materials specified in Subsection 6a, above, for a charge
no more than the cost of performing this distribution. 
d) If distribution of the work is made by offering access to copy from a
designated place, offer equivalent access to copy the above specified materials
from the same place. 
e) Verify that the user has already received a copy of these materials or that
you have already sent this user a copy. 
For an executable, the required form of the "work that uses the Library" must
include any data and utility programs needed for reproducing the executable from
it. However, as a special exception, the materials to be distributed need not
include anything that is normally distributed (in either source or binary form)
with the major components (compiler, kernel, and so on) of the operating system
on which the executable runs, unless that component itself accompanies the
executable. 

It may happen that this requirement contradicts the license restrictions of
other proprietary libraries that do not normally accompany the operating system.
Such a contradiction means you cannot use both them and the Library together in
an executable that you distribute. 

7. You may place library facilities that are a work based on the Library
side-by-side in a single library together with other library facilities not
covered by this License, and distribute such a combined library, provided that
the separate distribution of the work based on the Library and of the other
library facilities is otherwise permitted, and provided that you do these two
things: 


a) Accompany the combined library with a copy of the same work based on the
Library, uncombined with any other library facilities. This must be distributed
under the terms of the Sections above. 
b) Give prominent notice with the combined library of the fact that part of it
is a work based on the Library, and explaining where to find the accompanying
uncombined form of the same work. 
8. You may not copy, modify, sublicense, link with, or distribute the Library
except as expressly provided under this License. Any attempt otherwise to copy,
modify, sublicense, link with, or distribute the Library is void, and will
automatically terminate your rights under this License. However, parties who
have received copies, or rights, from you under this License will not have their
licenses terminated so long as such parties remain in full compliance. 

9. You are not required to accept this License, since you have not signed it.
However, nothing else grants you permission to modify or distribute the Library
or its derivative works. These actions are prohibited by law if you do not
accept this License. Therefore, by modifying or distributing the Library (or any
work based on the Library), you indicate your acceptance of this License to do
so, and all its terms and conditions for copying, distributing or modifying the
Library or works based on it. 

10. Each time you redistribute the Library (or any work based on the Library),
the recipient automatically receives a license from the original licensor to
copy, distribute, link with or modify the Library subject to these terms and
conditions. You may not impose any further restrictions on the recipients'
exercise of the rights granted herein. You are not responsible for enforcing
compliance by third parties with this License. 

11. If, as a consequence of a court judgment or allegation of patent
infringement or for any other reason (not limited to patent issues), conditions
are imposed on you (whether by court order, agreement or otherwise) that
contradict the conditions of this License, they do not excuse you from the
conditions of this License. If you cannot distribute so as to satisfy
simultaneously your obligations under this License and any other pertinent
obligations, then as a consequence you may not distribute the Library at all.
For example, if a patent license would not permit royalty-free redistribution
of the Library by all those who receive copies directly or indirectly through
you, then the only way you could satisfy both it and this License would be to
refrain entirely from distribution of the Library. 

If any portion of this section is held invalid or unenforceable under any
particular circumstance, the balance of the section is intended to apply, and
the section as a whole is intended to apply in other circumstances. 

It is not the purpose of this section to induce you to infringe any patents or
other property right claims or to contest validity of any such claims; this
section has the sole purpose of protecting the integrity of the free software
distribution system which is implemented by public license practices. Many
people have made generous contributions to the wide range of software
distributed through that system in reliance on consistent application of that
system; it is up to the author/donor to decide if he or she is willing to
distribute software through any other system and a licensee cannot impose that
choice. 

This section is intended to make thoroughly clear what is believed to be a
consequence of the rest of this License. 

12. If the distribution and/or use of the Library is restricted in certain
countries either by patents or by copyrighted interfaces, the original copyright
holder who places the Library under this License may add an explicit 
geographical distribution limitation excluding those countries, so that
distribution is permitted only in or among countries not thus excluded. In such
case, this License incorporates the limitation as if written in the body of this
License. 

13. The Free Software Foundation may publish revised and/or new versions of the
Lesser General Public License from time to time. Such new versions will be
similar in spirit to the present version, but may differ in detail to address
new problems or concerns. 

Each version is given a distinguishing version number. If the Library specifies
a version number of this License which applies to it and "any later version",
you have the option of following the terms and conditions either of that version
or of any later version published by the Free Software Foundation. If the
Library does not specify a license version number, you may choose any version
ever published by the Free Software Foundation. 

14. If you wish to incorporate parts of the Library into other free programs
whose distribution conditions are incompatible with these, write to the author
to ask for permission. For software which is copyrighted by the Free Software
Foundation, write to the Free Software Foundation; we sometimes make exceptions
for this. Our decision will be guided by the two goals of preserving the free
status of all derivatives of our free software and of promoting the sharing and
reuse of software generally. 

NO WARRANTY 

15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE
LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED
IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE LIBRARY "AS
IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT
NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE
LIBRARY IS WITH YOU. SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME THE COST OF
ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 

16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL
ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE
LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL,
SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR
INABILITY TO USE THE LIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA
BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A
FAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF SUCH HOLDER
OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. 


END OF TERMS AND CONDITIONS
      </synopsis>
    </para>
  </appendix>
</book>


</set>
