#precompute.query.1 = SELECT a1_.start AS a2_, a1_.end AS a3_, a1_.strand AS a4_, a6_ \
#                     FROM org.flymine.model.genomic.Location AS a1_, \
#                     org.flymine.model.genomic.Chromosome AS a5_, \
#                     org.flymine.model.genomic.BioEntity AS a6_ \
#                     WHERE (a1_.object CONTAINS a5_ AND a1_.subject CONTAINS a6_)

# FlyAtlas widget query
precompute.query.1 = SELECT a1_.affyCall AS a4_, a2_.name AS a5_, a3_.primaryIdentifier AS a6_, a3_.id as a7_ FROM org.flymine.model.genomic.FlyAtlasResult AS a1_, org.flymine.model.genomic.MicroArrayAssay AS a2_, org.flymine.model.genomic.Gene AS a3_ WHERE (a1_.genes CONTAINS a3_ AND a1_.assays CONTAINS a2_) ORDER BY a3_.id

precompute.query.2 = SELECT a3_ FROM org.flymine.model.genomic.FlyAtlasResult AS a1_, org.flymine.model.genomic.MicroArrayAssay AS a2_, org.flymine.model.genomic.Gene AS a3_ WHERE (a1_.genes CONTAINS a3_ AND a1_.assays CONTAINS a2_)

# chromosome distribution widget
precompute.query.3 = SELECT DISTINCT a3_.primaryIdentifier AS a1_, a4_.primaryIdentifier AS a2_, a4_.id as a6_, a5_.name as a7_ FROM org.flymine.model.genomic.Chromosome AS a3_, org.flymine.model.genomic.LocatedSequenceFeature AS a4_, org.flymine.model.genomic.Organism AS a5_ WHERE (a4_.chromosome CONTAINS a3_ AND a4_.organism CONTAINS a5_)

# Bag upload queries
precompute.query.6 = SELECT a1_.id as a3_, a2_.value as a4_ FROM org.flymine.model.genomic.BioEntity AS a1_, org.flymine.model.genomic.Synonym AS a2_ WHERE (a1_.synonyms CONTAINS a2_ AND a2_.isPrimary = true)

precompute.query.7 = SELECT a1_.id as a3_, a2_.value as a4_ FROM org.flymine.model.genomic.BioEntity AS a1_, org.flymine.model.genomic.Synonym AS a2_ WHERE (a1_.synonyms CONTAINS a2_ AND a2_.isPrimary = false)

precompute.query.8 = SELECT DISTINCT a1_.id AS a3_, a2_.value AS a4_, a5_.shortName as a6_ FROM org.flymine.model.genomic.BioEntity AS a1_, org.flymine.model.genomic.Synonym AS a2_, org.flymine.model.genomic.Organism AS a5_ WHERE (a1_.synonyms CONTAINS a2_ AND a2_.isPrimary = true AND a1_.organism CONTAINS a5_)

precompute.query.9 = SELECT DISTINCT a1_.id AS a3_, a2_.value AS a4_, a5_.shortName as a6_ FROM org.flymine.model.genomic.BioEntity AS a1_, org.flymine.model.genomic.Synonym AS a2_, org.flymine.model.genomic.Organism AS a5_ WHERE (a1_.synonyms CONTAINS a2_ AND a2_.isPrimary = false AND a1_.organism CONTAINS a5_)

# KEGG pathway widget query
precompute.query.10 = SELECT a1_, a2_.id as a3_ FROM org.flymine.model.genomic.Gene AS a1_, org.flymine.model.genomic.Pathway AS a2_ WHERE (a1_.pathways CONTAINS a2_)

# Publications widget
precompute.query.11 = SELECT a2_.pubMedId AS a4_, a2_.title AS a5_, a1_.id as a6_, a3_.name as a7_ FROM org.flymine.model.genomic.Gene AS a1_, org.flymine.model.genomic.Publication AS a2_, org.flymine.model.genomic.Organism AS a3_ WHERE (a1_.organism CONTAINS a3_ AND a1_.publications CONTAINS a2_)

# GO enrichment queries
precompute.query.12 = SELECT a4_.identifier AS a5_, a2_.name AS a6_, a4_.namespace as a7_, a3_.name as a8_, a1_.id as a9_ FROM org.flymine.model.genomic.Gene AS a1_, org.flymine.model.genomic.GOAnnotation AS a2_, org.flymine.model.genomic.Organism AS a3_, org.flymine.model.genomic.GOTerm AS a4_ WHERE (a1_.allGoAnnotation CONTAINS a2_ AND a1_.organism CONTAINS a3_ AND a2_.property CONTAINS a4_ AND a2_.qualifier IS NULL)

precompute.query.13 = SELECT a2_.id AS a3_ FROM org.flymine.model.genomic.Gene AS a1_, org.flymine.model.genomic.Organism AS a2_ WHERE (a1_.organism CONTAINS a2_)

precompute.query.16 = SELECT a1_ FROM org.flymine.model.genomic.Gene AS a1_, org.flymine.model.genomic.GOAnnotation AS a2_, org.flymine.model.genomic.Organism AS a3_, org.flymine.model.genomic.GOTerm AS a4_ WHERE (a1_.allGoAnnotation CONTAINS a2_ AND a1_.organism CONTAINS a3_ AND a2_.property CONTAINS a4_ AND a2_.qualifier IS NULL)

precompute.query.17 = SELECT a4_.identifier AS a5_, a4_.namespace as a6_, a3_.id as a7_, a1_.id as a8_ FROM org.flymine.model.genomic.Gene AS a1_, org.flymine.model.genomic.GOAnnotation AS a2_, org.flymine.model.genomic.Organism AS a3_, org.flymine.model.genomic.GOTerm AS a4_ WHERE (a1_.allGoAnnotation CONTAINS a2_ AND a1_.organism CONTAINS a3_ AND a2_.property CONTAINS a4_ AND a2_.qualifier IS NULL)

# protein domain widget
precompute.query.18 = SELECT a1_, a3_.name as a6_, a4_.primaryIdentifier AS a5_, a4_.name AS a7_ FROM org.flymine.model.genomic.Gene AS a1_, org.flymine.model.genomic.Protein AS a2_, org.flymine.model.genomic.Organism AS a3_, org.flymine.model.genomic.ProteinDomain AS a4_ WHERE (a1_.organism CONTAINS a3_ AND a1_.proteins CONTAINS a2_ AND a2_.proteinDomains CONTAINS a4_)

precompute.query.19 = SELECT a1_.id as a4_, a3_.primaryIdentifier AS a5_, a3_.name AS a6_, a2_.name as a7_ FROM org.flymine.model.genomic.Protein AS a1_, org.flymine.model.genomic.Organism AS a2_, org.flymine.model.genomic.ProteinDomain AS a3_ WHERE (a1_.proteinDomains CONTAINS a3_ AND a1_.organism CONTAINS a2_)

# uniprot keyword widget
precompute.query.20 = SELECT a1_.id as a5_, a4_.name AS a6_, a2_.name as a7_ FROM org.flymine.model.genomic.Protein AS a1_, org.flymine.model.genomic.Organism AS a2_, org.flymine.model.genomic.Ontology AS a3_, org.flymine.model.genomic.OntologyTerm AS a4_ WHERE (a1_.organism CONTAINS a2_ AND a1_.keywords CONTAINS a4_ AND a4_.ontology CONTAINS a3_ AND a3_.title LIKE 'UniProtKeyword')

# uniprot features widget
precompute.query.21 = SELECT a1_.id as a5_, a3_.type as a6_, a2_.name as a7_ FROM org.flymine.model.genomic.Protein AS a1_, org.flymine.model.genomic.Organism AS a2_, org.flymine.model.genomic.UniProtFeature AS a3_ WHERE (a1_.organism CONTAINS a2_ AND a1_.features CONTAINS a3_)

# fly-fish & BDGP widget
precompute.query.22 = SELECT DISTINCT a1_.expressed AS a3_, a1_.stageRange AS a4_, a2_.primaryIdentifier AS a5_ FROM org.flymine.model.genomic.MRNAExpressionResult AS a1_, org.flymine.model.genomic.Gene AS a2_ WHERE (a2_.mRNAExpressionResults CONTAINS a1_)

precompute.constructquery.00 = Gene objects +Relation object Chromosome
precompute.constructquery.01 = Gene synonyms Synonym
precompute.constructquery.02 = Synonym subject Gene
precompute.constructquery.03 = BioEntity synonyms Synonym
precompute.constructquery.04 = Synonym subject BioEntity
precompute.constructquery.05 = +Relation object Gene
precompute.constructquery.06 = +Relation subject Gene
precompute.constructquery.07 = +Relation object Exon
precompute.constructquery.08 = +Relation subject Exon
precompute.constructquery.09 = +Relation object Contig
precompute.constructquery.10 = +Relation subject Contig
precompute.constructquery.11 = +Relation object Chromosome
precompute.constructquery.12 = +Relation subject Chromosome
precompute.constructquery.13 = +Relation object Transcript
precompute.constructquery.14 = +Relation subject Transcript
precompute.constructquery.15 = +Relation object BioEntity
precompute.constructquery.16 = +Relation subject BioEntity
precompute.constructquery.17 = BioEntity objects +Relation object Chromosome
precompute.constructquery.18 = BioEntity organism Organism
precompute.constructquery.19 = Gene organism Organism
precompute.constructquery.190 = Protein organism Organism
precompute.constructquery.20 = Exon organism Organism
precompute.constructquery.21 = Chromosome organism Organism
precompute.constructquery.22 = BioEntity annotations Annotation
precompute.constructquery.23 = Gene annotations Annotation

precompute.constructquery.24 = Annotation property BioProperty
precompute.constructquery.25 = BioEntity annotations Annotation property BioProperty
precompute.constructquery.26 = Gene annotations Annotation property BioProperty

precompute.constructquery.27 = Gene homologues Homologue homologue Gene
precompute.constructquery.60 = Gene homologues Homologue homologue Gene organism Organism

precompute.constructquery.29 = Gene goAnnotation GOAnnotation
precompute.constructquery.30 = Gene proteins Protein

precompute.constructquery.32 = Protein genes Gene

precompute.constructquery.52 = Protein genes Gene homologues Homologue homologue Gene

precompute.constructquery.60 = Gene proteins Protein annotations GOAnnotation
precompute.constructquery.70 = Gene overlappingFeatures IntergenicRegion
precompute.constructquery.71 = IntergenicRegion overlappingFeatures Gene

precompute.constructquery.72 = Gene homologues Homologue homologue Gene proteins Protein
precompute.constructquery.74 = Protein genes Gene homologues Homologue homologue Gene proteins Protein

precompute.constructquery.77 = Gene homologues Homologue homologue Gene proteins Protein proteinInteractions ProteinInteraction interactingProteins Protein
precompute.constructquery.78 = Motif expressionTerms MRNAExpressionTerm
